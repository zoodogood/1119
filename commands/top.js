import * as Util from '#src/modules/util.js';
import DataManager from '#src/modules/DataManager.js';
import { ButtonStyle, ComponentType } from 'discord.js';
import { Collection } from '@discordjs/collection';

class Command {
  // to-do: rename
  x = new Collection(Object.entries({
    level: {
      key: "level",
      component: {
        value: "level",
        label: "–£—Ä–æ–≤–µ–Ω—å",
        emoji: "763767958559391795",
        default: true
      },
      value: (element, _context) => {
        return (element.data.level - 1) * 22.5 * element.data.level + element.data.exp;
      },
      display: (element, output, index, _context) => {
        const name = `${ index + 1 }. ${ element.username }`;
        const value = `–£—Ä–æ–≤–µ–Ω—å: **${ element.data.level }** | –û–ø—ã—Ç–∞: ${ output }`;
        return {name, value};
      }
    },
    coins: {
      key: "coins",
      component: {
        value: "coins",
        label: "–ü–æ –±–æ–≥–∞—Ç—Å—Ç–≤—É",
        emoji: "637533074879414272"
      },
      value: (element, _context) => {
        return element.data.coins + element.data.berrys * DataManager.data.bot.berrysPrise;
      },
      display: (element, output, index, _context) => {
        const name = `${ index + 1 }. ${ element.username }`;
        const value = `‚Äî ${ element.data.coins } (${ output }) <:coin:637533074879414272>`;
        return {name, value};
      }
    },
    praises: {
      key: "praises",
      component: {
        value: "praises",
        label: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø–æ—Ö–≤–∞–ª",
        emoji: "630463177314009115"
      },
      value: (element, _context) => {
        return element.data.praiseMe?.length;
      },
      display: (element, output, index, _context) => {
        const name = `${ index + 1 }. ${ element.username }`;
        const value = `‚Äî –ë—ã–ª –ø–æ—Ö–≤–∞–ª–µ–Ω ${ Util.ending(output, "—Ä–∞–∑", "", "", "–∞") }  <:wellplayed:630463177314009115>`;
        return {name, value};
      }
    },
    thief: {
      key: "thief",
      component: {
        value: "thief",
        label: "–ü–æ –≥—Ä–∞–±–µ–∂–∞–º",
        emoji: "üß§"
      },
      value: (element, _context) => {
        return element.data.thiefCombo + (~~element.data.thiefWins / 5);
      },
      display: (element, output, index, _context) => {
        const name = `${ index + 1 }. ${ element.username }`;
        const value = `–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä—á–∞—Ç–æ–∫: \`${ element.data.thiefGloves }|${ element.data.thiefCombo || 0 }\` > –û—Ç–±–∏—Ç–æ –∞—Ç–∞–∫: ${ element.data.thiefWins | 0 }`.replace(/-/g, "!");
        return {name, value};
      }
    },
    quests: {
      key: "quests",
      component: {
        value: "quests",
        label: "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
        emoji: "üìú"
      },
      value: (element, _context) => {
        return element.data.dayQuests;
      },
      display: (element, output, index, _context) => {
        const cup = (index == 0) ? "<a:cupZ:806813908241350696> " : (index == 1) ? "<a:cupY:806813850745176114> " : (index == 2) ? "<a:cupX:806813757832953876> " : "";
        const name =  `${ cup } ${ index + 1 }. ${ element.username }`;
        const value = `–í—ã–ø–æ–ª–Ω–µ–Ω–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤: ${ output } | –ì–ª–æ–±–∞–ª—å–Ω—ã—Ö: ${(element.data.completedQuest || []).length}/${Object.values(quests.names).length}`;
        return {name, value};
      }
    },
    witch: {
      key: "witch",
      component: {
        value: "witch",
        label: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
        emoji: "‚öúÔ∏è"
      },
      value: (element, _context) => {
        return element.data.voidRituals;
      },
      display: (element, output, index, _context) => {
        const username = element.id === interaction.user.id ? "?".repeat(element.username.length) : element.username;
        const addingName = (index === 0 ? " <a:neonThumbnail:806176512159252512>" : "") + (Util.random(9) ? "" : " <a:void:768047066890895360>");
        const name = `${ index + 1 }. ${ username }${ addingName }`;
        const value = `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –∫–æ—Ç–ª–∞ ${ Util.random(3) ? element.data.voidRituals : "???" }`;
        return {name, value};
      }
    },
    boss: {
      key: "boss",
      component: {
        value: "boss",
        label: "–°–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —É—Ä–æ–Ω –ø–æ –±–æ—Å—Å—É",
        emoji: "‚öîÔ∏è"
      },
      filter: (context) => context.boss.isArrived,
      value: (element, context) => {
        return BossManager.getUserStats(context.boss, element.id).dealtDamage;
      },
      display: (element, output, index, context) => {
        const name = `${ index + 1 }. ${ user.username }`;
        const value = `–í–µ–ª–∏–∫–∏–π –≤–æ–∏–Ω –Ω–∞–Ω—ë—Å ${ output } (${ (output * 100 / context.boss.damageTaken).toFixed(1) }%) —É—Ä–æ–Ω–∞`;
        return {name, value};
      }
    },
    chest: {
      key: "chest",
      component: {
        value: "chest",
        label: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–æ–≤ —Å—É–Ω–¥—É–∫–∞",
        emoji: "805405279326961684"
      },
      value: (element, context) => {
        return element.data.chestBonus;
      },
      display: (element, output, index, context) => {
        const name = `${ index + 1 }. ${ user.username }`;
        const value = output.toString(2);
        return {name, value};
      }
    }
  }));


  createComponents(context){
    return [
      [
        {
          type: ComponentType.Button,
          label: "",
          emoji: "640449848050712587",
          customId: "previous",
          style: ButtonStyle.Secondary,
          filter: context.page !== 0
        },
        {
          type: ComponentType.Button,
          label: "",
          emoji: "640449832799961088",
          customId: "next",
          style: ButtonStyle.Secondary,
          filter: context.pages.length > 1 && context.page !== context.pages.length - 1
        },
        {
          type: ComponentType.Button,
          label: "–í—ã–±—Ä–∞—Ç—å",
          customId: "selectPage",
          style: ButtonStyle.Secondary,
          filter: context.pages.length > 1
        }
      ],
      [{
        type: ComponentType.StringSelect,
        options: this.x.map(x => x.component),
        customId: "selectFilter"
      }]
    ]
  };

	async onChatInput(msg, interaction){
    let guild = msg.guild;
    let others = ["637533074879414272", "763767958559391795", "630463177314009115", "üß§", "üìú", "‚öúÔ∏è", (guild.data.boss?.isArrived ? "‚öîÔ∏è" : null)];

    let users = guild.members.cache.map(element => element.user).filter(el => !el.bot && !el.data.profile_confidentiality).sort((b, a) => ( (a.data.level - 1) * 22.5 * a.data.level + a.data.exp) - ( (b.data.level - 1) * 22.5 * b.data.level + b.data.exp));
    let rangs, sort;

    let pages = [];

    let page = 0;
    let embed = {
      fields: pages[0],
      author: {name: `–¢–æ–ø –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${ guild.name }`, iconURL: guild.iconURL()}, title: "–ó–∞–≥—Ä—É–∑–∫–∞ –¢–æ–ø–∞..",
      components: this.createComponents({pages: []})
    };
    if (pages[1]) embed.footer = {text: `–°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page + 1} / ${pages.length}`};
    let message = await msg.msg(embed);
    let react = "763767958559391795";
    let index = -1;


    embed.edit = true;

    while (true){
      switch (react) {
        case "640449832799961088": page++;
        break;
        case "640449848050712587": page--;
        break;



        default: return;
      }

      if (react != "640449848050712587" && react != "640449832799961088"){
        page = 0;
        pages = [];
        while (rangs.length) pages.push(rangs.splice(0, 15));
      }
      embed.message = index !== -1 ? `–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ ${ index + 1 } –º–µ—Å—Ç–µ, ${ msg.author.username }` : `–í—ã –Ω–µ —á–∏—Å–ª–∏—Ç–µ—Å—å –≤ —ç—Ç–æ–º —Ç–æ–ø–µ, ${ msg.author.username }`
      embed.footer = (pages[1]) ? {text: `–°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page + 1} / ${pages.length}`} : null;
      embed.fields = (pages[0]) ? pages[page] : [{name: "–ï—â—ë –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–ø–∞–ª –≤ —Ç–æ–ø", value: "–ó–Ω–∞—á–∏—Ç –≤—ã –ª—ë–≥–∫–æ –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–º(-–æ–π)"}];

      message = await message.msg(embed);
      react = await message.awaitReact({user: msg.author, removeType: "all"}, (page != 0 ? "640449848050712587" : null), ((pages[1] && page != pages.length - 1) ? "640449832799961088" : null), ...others.filter(element => element != react));
    }

  }


	options = {
	  "name": "top",
	  "id": 16,
	  "media": {
	    "description": "\n\n–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º.\n\n–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–∏–Ω–æ–≤\n‚Ä¢ –£—Ä–æ–≤–µ–Ω—å\n‚Ä¢ –ü–æ—Ö–≤–∞–ª—ã\n‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –∫—Ä–∞–∂\n‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–≤–µ—Å—Ç–æ–≤\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ—Ç–ª–∞\n\n:pencil2:\n```python\n!top #–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤\n```\n\n"
	  },
	  "allias": "—Ç–æ–ø —Ä–∞–Ω–≥–∏ rank ranks rangs –ª–∏–¥–µ—Ä—ã leaderboard leaders",
		"allowDM": true,
		"cooldown": 20000000,
		"type": "user",
		"Permissions": 16384
	};
};

export default Command;