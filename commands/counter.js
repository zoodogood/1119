import * as Util from '#src/modules/util.js';
import CounterManager from '#src/modules/CounterManager.js';

class Command {

	async onChatInput(msg, interaction){
    msg.msg({content: "123"});
    if (CounterManager.data.filter(counter => counter.guildId === msg.guild.id).length >= 15){
      msg.msg({title: "–ú–∞–∫—Å–∏–º—É–º 15 —Å—á—ë—Ç—á–∏–∫–æ–≤", color: "#ff0000", delete: 7000});
    }

    const context = {
      interaction,
      questionMessage: null,
      typeBase: null,
      templateContent: null,
      counter: {}
    }
    const counterTypes = [
      {
        emoji: "üñäÔ∏è",
        label: "üñäÔ∏è–°–æ–æ–±—â–µ–Ω–∏–µ",
        description: "–ï–¥–∏–Ω–æ–∂–¥—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ—Å–ª–µ, –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ, –∏–∑–º–µ–Ω—è–µ—Ç –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ",
        id: "message",
        change: async (context) => {
          const counter = context.counter;
          counter.channelId = interaction.channel.id;
          counter.guildId   = interaction.guild.id;
          counter.authorId  = interaction.user.id;

          context.questionMessage = await msg.msg({title: "–í–∞—à–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –Ω—É–∂–µ–Ω —ç–º–±–µ–¥?", description: `–ü–æ–¥—Ä–∞–∑—É–º–∏–≤–∞–µ—Ç—Å—è —ç–º–±–µ–¥-–æ–±—ë—Ä—Ç–∫–∞: —Ü–≤–µ—Ç –∏ –∑–∞–≥–ª–∞–≤–∏–µ`});
          const react = await message.awaitReact({user: msg.author, type: "all"}, "685057435161198594", "763807890573885456");
          context.questionMessage.delete();

          if (!react){
            return;
          }

          if (react === "685057435161198594"){

          }

          if (react === "763807890573885456"){

          }
        }
      },
      {
        emoji: "ü™ß",
        label: "ü™ß–ò–º—è –∫–∞–Ω–∞–ª–∞",
        description: "–ú–µ–Ω—è–µ—Ç –∏–º—è —É–∫–∞–∑–∞–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
        id: "channel",
        change: async (context) => {
          const counter = context.counter;
          counter.channelId = interaction.channel.id;
          counter.guildId   = interaction.guild.id;
          counter.authorId  = interaction.user.id;
          
        }
      },
      {
        emoji: "üñåÔ∏è",
        label: "üñåÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è",
        description: "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —É–∫–∞–∑–∞–Ω—ã–π –∫–∞–Ω–∞–ª",
        id: "poster",
        change: async (context) => {
          const counter = context.counter;
          counter.channelId = interaction.channel.id;
          counter.guildId   = interaction.guild.id;
          counter.authorId  = interaction.user.id;
          
        }
      }
    ];


    context.questionMessage = await msg.msg({title: "ü™Ñ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Å—á—ë—Ç—á–∏–∫–∞", description: `–°—á—ë—Ç—á–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –∫–∞–Ω–∞–ª–∞–º–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏\n–≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø ${ counterTypes.map(({label, description}) => `‚ùØ ${ label }\n> ${ description }\n> `).join("\n") }\n `});
    const takeCounterType = async (context) => {
      const reactions = counterTypes.map(({emoji}) => emoji);
      const reaction = await context.questionMessage.awaitReact({user: msg.author, type: "all"}, ...reactions);
      return counterTypes.find(({emoji}) => emoji === reaction);
    }
    context.typeBase = await takeCounterType(context);
    
    if (!context.type){
      context.questionMessage.delete();
      return;
    }
    context.questionMessage.msg({title: "ü™Ñ –û—Ç–ª–∏—á–Ω–æ! –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —à–∞–±–ª–æ–Ω–æ–≤", description: "–ö–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç —Å—á—ë—Ç—á–∏–∫ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Å–≤–æ—ë –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞", edit: true});
    context.templateContent = await msg.channel.awaitMessage(msg.author)?.content;

    context.questionMessage.delete();
    if (!context.templateContent){
      return;
    }

    if (!context.templateContent.match(/\{(?:.|\n)+?\}/)){
      msg.msg({title: "–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç —à–∞–±–ª–æ–Ω—ã.", color: "#ff0000", delete: 5000});
      return;
    }

    const counter = await context.typeBase.change(context.context);
    if (!counter){
      return;
    }
    CounterManager.create(counter);
    msg.msg({title: "–£—Å–ø–µ—Ö", delete: 4_000});

    switch (type) {
      case "üñäÔ∏è":
        let embed = {embed: true};
        let textValue = template;
        let message = await msg.msg({title: "–í–∞—à–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –Ω—É–∂–µ–Ω —ç–º–±–µ–¥?", description: `–ü–æ–¥—Ä–∞–∑—É–º–∏–≤–∞–µ—Ç—Å—è —ç–º–±–µ–¥-–æ–±—ë—Ä—Ç–∫–∞, —Ü–≤–µ—Ç –∏ –∑–∞–≥–ª–∞–≤–∏–µ`});
        react = await message.awaitReact({user: msg.author, type: "all"}, "685057435161198594", "763807890573885456");
        message.delete();
        if (react == 685057435161198594){
          embed = {description: template}
          answer = await msg.channel.awaitMessage(msg.author, {title: "–£–∫–∞–∂–∏—Ç–µ –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ —ç–º–±–µ–¥–∞", embed: {description: `–û–≥–ª–∞–≤–ª–µ–Ω–∏–µ ‚Äî –≥–æ–ª–æ–≤–∞ —ç–º–±–µ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è...\n–û–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —à–∞–±–ª–æ–Ω—ã`, time: 1_200_000}});
          if (!answer) return false;
          textValue = answer.content || "";

          answer = await msg.channel.awaitMessage(msg.author, {title: "–í–≤–µ–¥–∏—Ç–µ —Ü–≤–µ—Ç –≤ HEX —Ñ–æ—Ä–º–∞—Ç–µ", embed: {description: `HEX ‚Äî #ff0000, –≥–¥–µ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —á–∏—Å–ª–∞ –≤ 16-–∑–Ω–∞—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ (0,1,2,...,e,f) ‚Äî –∫—Ä–∞—Å–Ω—ã–π, –∑–∞ –Ω–∏–º –∑–µ–ª–µ–Ω—ã–π –∏ —Å–∏–Ω–∏–π`, time: 1_200_000}});
          if (!answer) return false;
          embed.color = answer.content.replace("#", "");
        }

        msg.msg({title: "–ß–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ", description: "–≠—Ç–æ –∏ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤—ã–π —Å—á—ë—Ç—á–∏–∫", delete: 7000});
        await Util.sleep(1500);
        counter = await msg.msg({title: textValue, ...embed});
        
      break;
      case "ü™ß":
        let channel = await msg.channel.awaitMessage(msg.author, {title: "–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –µ–≥–æ"});
        if (channel){
          channel = (channel.mentions.channels.first()) ? channel.mentions.channels.first() : msg.guild.channels.cache.get(channel.content);
          msg.msg({title: "–ì–æ—Ç–æ–≤–æ, –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ–º–∞—Ü–∏—é.", description: "–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Å—á—ë—Ç—á–∏–∫, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π `!counters`", delete: 7000});
          CounterManager.create({channelId: channel.id, guildId: msg.guild.id, type: "channel", template});
        }
        else msg.channel.msg({title: "–ö–∞–Ω–∞–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", color: "#ff0000"});
      break;
      case "üñåÔ∏è":
        let interval = await msg.channel.awaitMessage(msg.author, {title: "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª-–≤–æ –º–∏–Ω—É—Ç –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è", description: "–ú–∏–Ω–∏–º—É–º 15–º"});
        interval = interval && +interval.content > 15 && +interval.content;
        if (!interval) return msg.msg({title: "–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ", color: "#ff0000", delete: 4000});
        CounterManager.create({channelId: msg.channel.id, guildId: msg.guild.id, type: "poster", template, params: interval});
      break;
      default: return await Util.sleep(2000);

    }
  }


	options = {
	  "name": "counter",
	  "id": 42,
	  "media": {
	    "description": "\n\n–û—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É ‚Äî —Å –ø–æ–º–æ—â—å—é —à–∞–±–ª–æ–Ω–æ–≤ —Å–æ–∑–¥–∞–π—Ç–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç. –°—á—ë—Ç—á–∏–∫–∏ –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å –∫–∞–∫ –∏–º—è –ª—é–±–æ–≥–æ –∫–∞–Ω–∞–ª–∞, —Ç–∞–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n:pencil2:\n```python\n!counter #–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤\n```\n\n"
	  },
	  "allias": "—Å—á—ë—Ç—á–∏–∫ —Å—á–µ—Ç—á–∏–∫ count",
		"allowDM": true,
		"type": "guild",
		"Permissions": 16
	};
};

export default Command;