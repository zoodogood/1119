import * as Util from '#src/modules/util.js';
import { client } from '#src/index.js';
import DataManager from '#src/modules/DataManager.js';

class Command {

	async onChatInput(msg, interaction){
    const thumbnailArray = [null, "https://cdn.discordapp.com/attachments/629546680840093696/875367772916445204/t1.png", "https://cdn.discordapp.com/attachments/629546680840093696/875367713411858492/t2.png", "https://cdn.discordapp.com/attachments/629546680840093696/875367267318247444/t3.png", "https://cdn.discordapp.com/attachments/629546680840093696/875366344642662510/t4_digital_art_x4.png", "https://cdn.discordapp.com/attachments/629546680840093696/875366096952246312/t9.png"];

    let server = msg.guild.data;
    let level = server.treeLevel || 0;
    const COSTS_TABLE = [1, 1, 1, 3, 2, 2, 2, 4, 2, 2, 2, 5, 3, 3, 3, 7, 4, 4, 4, 10];
    let costsUp = COSTS_TABLE[level];


    const berrysStarts = Math.floor( server.berrys ) || 0;
    const getSpeedGrowth = (level) => [0, 1.2, 1.8, 2.5, 5, 7.5, 10, 12, 15.6, 21, 24, 42, 54, 66, 84, 108, 144, 252, 360, 450, 792, 1008][level];

    let timePassed;

    let fields = [];
    const fillEmbed = () => {
      const speedGrowth = getSpeedGrowth(level);
      server.berrys = Math.min( (server.berrys ?? 0) + (timePassed / 86400000) * speedGrowth, speedGrowth * 360 );

      let grow = speedGrowth > 100 ? {type: "–º–∏–Ω—É—Ç—É", count: speedGrowth / 1440} : speedGrowth > 10 ? {type: "—á–∞—Å", count: speedGrowth / 24} : {type: "–¥–µ–Ω—å", count: speedGrowth};
      fields.push({name: "–£—Ä–æ–∂–∞–π", value: `–ö–ª—É–±–Ω–∏–∫–∏ –≤—ã—Ä–æ—Å—Ç–∞–µ—Ç ${grow.count} –≤ ${grow.type}\n–ì–æ—Ç–æ–≤–æ –¥–ª—è —Å–±–æ—Ä–∞: ${Math.floor(server.berrys)}\n–°–ª–µ–¥—É—â–∞—è –¥–æ–∑—Ä–µ–µ—Ç —á–µ—Ä–µ–∑: ${Util.timestampToDate((1 - server.berrys % 1) * 86400000 / speedGrowth)} <:berry:756114492055617558>`});

      let entrySeeds = server.treeSeedEntry || 0;
      fields.push({name: "–î–µ—Ä–µ–≤–æ", value: `–£—Ä–æ–≤–µ–Ω—å –¥–µ—Ä–µ–≤—Ü–∞ ${ level } ${level === 20 ? "(–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π)" : `\n–î–æ –ø–æ–≤—ã—à–µ–Ω–∏—è –Ω—É–∂–Ω–æ ${costsUp - entrySeeds > 5 ? costsUp - entrySeeds : ["–Ω–æ–ª—å", "–æ–¥–Ω–æ", "–¥–≤–∞", "—Ç—Ä–∏", "—á–µ—Ç—ã—Ä–µ", "–ø—è—Ç—å"][costsUp - entrySeeds]} ${Util.ending(costsUp - entrySeeds, "—Å–µ–º", "—è–Ω", "–µ—á–∫–æ", "–µ—á–∫–∞", {unite: (_quantity, word) => word})}` }`});

      let messagesNeed = (  [0, 70, 120, 180, 255, 370, 490, 610, 730, 930, 1270, 1500, 1720, 2200, 2700, 3200, 3700, 4500, 5400, 7400, 12000][level] + (msg.guild.memberCount * 3) + ((server.day_average || 0) / 5)  ) * ("treeMisstakes" in server ? 1 - 0.1 * server.treeMisstakes : 1);
      messagesNeed = Math.floor(messagesNeed / 3);

      let statusName = server.treeMisstakes ?
        messagesNeed <= server.day_msg ? "–î–µ—Ä–µ–≤–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è" : "–°–ª–µ–¥–∏—Ç–µ, —á—Ç–æ–±—ã –¥–µ—Ä–µ–≤–æ –Ω–µ –∑–∞—Å–æ—Ö–ª–æ" :
        messagesNeed <= server.day_msg ? "–î–µ—Ä–µ–≤–æ —Å—á–∞—Å—Ç–ª–∏–≤–æ" : "–î–µ—Ä–µ–≤–æ —Ä–∞–¥—É–µ—Ç—Å—è";

      let statusValue = messagesNeed <= server.day_msg ? "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π —É–∂–µ —Å–æ–±—Ä–∞–Ω–æ!" :
      `–°–æ–æ–±—â–µ–Ω–∏–π —Å–æ–±—Ä–∞–Ω–æ: ${server.day_msg}/${messagesNeed} ${  server.treeMisstakes ? `\n–†–∏—Å–∫—É–µ—Ç –∑–∞–≤—è–Ω—É—Ç—å —á–µ—Ä–µ–∑ ${+(4 - server.treeMisstakes).toFixed(1)}–¥` : ""}`;

      fields.push({name: `üíß ${statusName}`, value: statusValue});
    }

    if (level !== 0){
      timePassed = (Date.now() - server.treeEntryTimestamp) || 0;
      server.treeEntryTimestamp = Date.now();
      fillEmbed();
    }
    else {
      fields.push({name: "–û–±—â–∞—è –∏–Ω—Ñ–æ–º–∞—Ü–∏—è", value: "–ï–º—É –µ—â—ë –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –≤—ã—Ä–∞—Å—Ç–∏, –±—É–¥—É—á–∏ —Å–µ–º–µ—á–∫–æ–º –¥–µ—Ä–µ–≤–æ –Ω–µ –º–æ–∂–µ—Ç –¥–∞–≤–∞—Ç—å –ø–ª–æ–¥—ã.\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–∞–¥–∏—Ç–µ —Å–µ–º—è, –µ—Å–ª–∏ –æ–Ω–æ —É –≤–∞—Å –µ—Å—Ç—å.\n\n‚ùì –í—ã–ø–æ–ª–Ω—è—è –∫–∞–∂–¥—ã–π 50-–π –∫–≤–µ—Å—Ç –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ –¥–≤–µ —à—Ç—É–∫–∏"});
      timePassed = (Date.now() - server.treeEntryTimestamp) || 0;
    }

    let embed = {
      title: "–ñ–∏–≤–æ–µ, –∫–ª—É–±–Ω–∏—á–Ω–æ–µ –¥–µ—Ä–µ–≤–æ",
      thumbnail: thumbnailArray[ Math.ceil(level / 4) ],
      description: `–≠—Ç–æ —Ä–∞—Å—Ç–µ–Ω–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ –ø—Ä–∏–Ω–µ—Å—Ç–∏ –æ–∫–µ–∞–Ω –∫–ª—É–±–Ω–∏–∫–∏ –∑–∞ –∫–æ—Ä–æ—Ç–∫–∏–π —Å—Ä–æ–∫. –î–ª—è —ç—Ç–æ–≥–æ –∑–∞–±–æ—Ç—å—Ç–µ—Å—å –æ –Ω—ë–º: –æ–±—â–∞–π—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ª–∞–º–ø–æ–≤—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è –≤–µ—Å–µ–ª–æ –∏ —Å–ª–µ–¥–∏—Ç–µ, —á—Ç–æ–±—ã –¥–µ—Ä–µ–≤–æ –Ω–µ –∑–∞—Å–æ—Ö–ª–æ.`,
      fields: fields,
      footer: {text: "–í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ø–æ–ª–∏–≤–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è—é—Ç —Å–æ–±–æ–π –≤–æ–¥—É", iconURL: "https://emojipedia-us.s3.amazonaws.com/source/skype/289/sweat-droplets_1f4a6.png"}
    };

    let message = await msg.msg(embed);



    if (level !== 20){
      await message.react("üå±");
    }

    if (server.berrys >= 1){
      await message.react("756114492055617558");
    }

    let collector = message.createReactionCollector({filter: (r, u) => u.id !== client.user.id && ( r.emoji.name === "üå±" || r.emoji.id === "756114492055617558" ), time: 180000});
    collector.on("collect", async (r, memb) => {
      let react = r.emoji.id || r.emoji.name;
      let user = memb.data;

      if (react === "üå±"){

        if ( level === 20 ){
          msg.msg({title: "–ï—â—ë –±–æ–ª—å—à–µ?", description: `–ù–µ –Ω—É–∂–Ω–æ, –¥–µ—Ä–µ–≤–æ —É–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è!`, author: {name: memb.username, iconURL: memb.avatarURL()}, delete: 7000});
          message.reactions.resolve("üå±").remove();
          return;
        }


        if (!user.seed){
          msg.msg({title: "–£ –≤–∞—Å –Ω–µ—Ç –°–µ–º—è–Ω", description: `–ì–¥–µ –∏—Ö –¥–æ—Å—Ç–∞—Ç—å? –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∫–≤–µ—Å—Ç—ã, –∫–∞–∂–¥—ã–π 50-–π –≤—ã–ø–æ–ª–Ω–µ–Ω—ã–π –∫–≤–µ—Å—Ç –±—É–¥–µ—Ç –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–∞—Ç—å –≤–∞—Å –¥–≤—É–º—è —Å–µ–º–µ—á–∫–∞–º–∏.`, author: {name: memb.username, iconURL: memb.avatarURL()}, delete: 7000});
          return;
        }


        server.treeSeedEntry = (server.treeSeedEntry ?? 0) + 1;
        user.seed--;
        msg.msg({title: `–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–µ–º–µ—á–∫–æ, ${memb.username}`, description: `üå± `, delete: 7000});

        // –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ä–µ–≤–∞ —É–≤–µ–ª–∏—á–∏–ª—Å—è
        if (server.treeSeedEntry >= costsUp){
          server.treeSeedEntry = 0;
          level = server.treeLevel = (server.treeLevel ?? 0) + 1;
          costsUp = COSTS_TABLE[level];
          server.berrys = Math.round(1.5 ** (level + 3) + server.berrys);
          server.berrys = (server.berrys ?? 0) + getSpeedGrowth(level) * 5;

          await message.react("756114492055617558");
          embed.thumbnail = thumbnailArray[ Math.ceil(level / 4) ];

          msg.msg({title: "–î–µ—Ä–µ–≤–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥—Ä–æ—Å–ª–æ", description: `–ü–æ—Å–ª–µ –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ —Å–µ–º–µ—á–∫–∞ üå±, –¥–µ—Ä–µ–≤–æ —Å—Ç–∞–ª–æ –±–æ–ª—å—à–µ –∏ –¥–æ—Å—Ç–∏–≥–ª–æ —É—Ä–æ–≤–Ω—è ${ level }!`});
          delete server.treeMisstakes;
        }


      }


      // Berry take
      if (react === "756114492055617558"){
        if (user.CD_54 > Date.now()){
          msg.msg({title: "–ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞...", description: `–í—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–±—Ä–∞—Ç—å –∫–ª—É–±–Ω–∏–∫—É —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ **${Util.timestampToDate( user.CD_54 - Date.now() )}**`, footer: {text: "–ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –ø–æ –º–µ—Ä–µ —Ä–æ—Å—Ç–∞ –¥–µ—Ä–µ–≤–∞"}, author: {name: memb.username, iconURL: memb.avatarURL()}, delete: 7000, color: "#ff0000"});
          return;
        }

        if (server.berrys < 1){
          msg.msg({title: "–£–ø—Å..!", description: "–ù–∞ –¥–µ—Ä–µ–≤–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –∫–ª—É–±–Ω–∏–∫–∞. –í–æ–∑–º–æ–∂–Ω–æ, –∫—Ç–æ-—Ç–æ —É—Å–ø–µ–ª –∑–∞–±—Ä–∞—Ç—å –∫–ª—É–±–Ω–∏–∫—É —Ä–∞–Ω—å—à–µ –≤–∞—Å.. –ñ–¥–∏—Ç–µ, –ø–æ–∫–∞ –¥–æ–∑—Ä–µ–µ—Ç —Å–ª–µ–¥—É—â–∞—è, –Ω–µ —É–ø—É—Å—Ç–∏—Ç–µ –µ—ë!", author: {name: memb.username, iconURL: memb.avatarURL()}, delete: 7000, color: "#ff0000"});
          return;
        }

        const isBerryMany = server.berrys > getSpeedGrowth(level) * 3;

        const farmerBonus = user.voidTreeFarm ?? 0;
        let berrys = isBerryMany ?
          Util.random(1 + farmerBonus, 3 + farmerBonus * 2, {round: false}) :
          1 + farmerBonus;

        berrys = Math.min(Math.floor(berrys), Math.floor(server.berrys));


        user.berrys += berrys;
        server.berrys -= berrys;

        DataManager.data.bot.berrysPrise += berrys * 0.2;
        msg.msg({
          title: "–í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–ª–∏ –∫–ª—É–±–Ω–∏–∫—É",
          author: {name: memb.username, iconURL: memb.avatarURL()},
          description: `${ berrys > 5 ? berrys : ["–ù–æ–ª—å", "–û–¥–Ω–∞", "–î–≤–µ", "–¢—Ä–∏", "–ß–µ—Ç—ã—Ä–µ", "–ü—è—Ç—å"][berrys] } ${ Util.ending(berrys, "—è–≥–æ–¥", "", "–∞", "—ã", {unite: (_quantity, word) => word}) } ${Util.ending(berrys, "–ø–æ–ø–∞", "–¥–∞—é—Ç", "–ª–∞", "–ª–∏", {unite: (_quantity, word) => word})} –≤ –≤–∞—à –∫–∞—Ä–º–∞–Ω <:berry:756114492055617558>`,
          delete: 9000
        });
        user.CD_54 = Date.now() + Math.max( 86400000 / getSpeedGrowth(level) * (1 + level), 7200000 );

        const becomeCoinMessage = async (user) => {
          const collector = new Util.CustomCollector({target: client, event: "message", filter: (message) => message.author.id === user.id, time: 500_000});
          collector.setCallback((message) => {
            collector.end();
            getCoinsFromMessage(user, message);
          });
        }
        if (!random(0, 5)){
          becomeCoinMessage(user);
        }
      }

      fields.splice(0, fields.length);
      fillEmbed();

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –∫–ª—É–±–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
      if (  berrysStarts - Math.floor(server.berrys) > 0 ){
        let berrysTaken = { name: "–ö–ª—É–±–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏", value: `${Util.ending(  berrysStarts - Math.floor(server.berrys), "—à—Ç—É–∫", "", "–∞", "–∏"  )};` };
        fields.splice(-1, 0, berrysTaken);
      }

      embed.edit = true;
      await message.msg(embed);
    });

    collector.on("end", message.reactions.removeAll);
  }


	options = {
	  "name": "seed",
	  "id": 54,
	  "media": {
	    "description": "\n\n–ö–ª—É–±–Ω–∏—á–Ω–æ–µ –¥–µ—Ä–µ–≤–æ? –ú-–º, –≤–∫—É—Å–Ω–æ, –∞ –≥–æ–≤–æ—Ä—è—Ç –æ–Ω–∏ –Ω–∞ –¥–µ—Ä–µ–≤—å—è—Ö –Ω–µ —Ä–æ—Å—Ç—É—Ç..\n–û–Ω–æ –æ–±—â–µ–µ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ —Å–µ—Ä–≤–µ—Ä—É. –ë—É–¥–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —è–≥–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç —Å–æ–±—Ä–∞—Ç—å –∫–∞–∂–¥—ã–π\n_–ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã, —Ä–∞—Å—Ç–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞—Å–æ—Ö–Ω—É—Ç—å, –µ—Å–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ \"–∞–∫—Ç–∏–≤–∞\"_\n\n:pencil2:\n```python\n!tree #–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤\n```\n\n"
	  },
	  "allias": "tree livetree —Å–µ–º–µ—á–∫–æ berrystree –¥–µ—Ä–µ–≤–æ –∫–ª—É–±–Ω–∏—á–Ω–æ–µ–¥–µ—Ä–µ–≤–æ –∂–∏–≤–æ–µ–¥–µ—Ä–µ–≤–æ"
	};
};

export default Command;