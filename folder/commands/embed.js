//@ts-check
import * as Util from "#lib/util.js";
import { client } from "#bot/client.js";
import { EmbedBuilder } from "discord.js";

class Command {
  async onChatInput(msg, interaction) {
    const context = {
      questionMessage: null,
      embed: new EmbedBuilder(),
      previewMessage: null,
      updatePreviewMessage: () => {
        context.previewMessage({ edit: true, ...context.embed });
      },
    };

    const createBaseEmbed = (json) => {
      const title = "–≠–º–±–µ–¥ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä";
      const description = `–° –ø–æ–º–æ—â—å—é —Ä–µ–∞–∫—Ü–∏–π —Å–æ–∑–¥–∞–π—Ç–µ –≤–µ–ª–∏–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ \n–∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω—ã–º\n–ü–æ—Å–ª–µ —á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ª—é–±–æ–µ –º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!\n\nüìå - –∑–∞–≥–ª–∞–≤–∏–µ/–Ω–∞–∑–≤–∞–Ω–∏–µ\nüé® - —Ü–≤–µ—Ç\nüé¨ - –æ–ø–∏—Å–∞–Ω–∏–µ\nüë§ - –∞–≤—Ç–æ—Ä\nüéè - –ø–æ–¥–≥—Ä—É–ø–ø–∞\nü™§ - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≤–µ—Ä—Ö—É\nü™Ñ - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–Ω–∏–∑—É\nüß± - –¥–æ–±–∞–≤–∏—Ç—å –æ–±–ª–∞—Å—Ç—å\nüïµÔ∏è - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Ö—É–∫\nüòÜ - –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏\nüì• - —Ñ—É—Ç–µ—Ä\n\n‚≠ë –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∂–º—è–∫–∞–π—Ç–µ <:arrowright:640449832799961088>\n`;

      const embed = {
        title,
        description,
      };

      if (json) {
        try {
          const parsed = JSON.parse(json);
          Object.assign(embed, parsed);
        } catch {}
      }

      return embed;
    };

    Object.assign(context.embed, createBaseEmbed(interaction.params));

    const author = msg.author;

    context.previewMessage = await msg.msg(context.embed);

    let react, answer, reactions;

    while (true) {
      if (typeof react !== "object")
        react = await context.previewMessage.awaitReact(
          { user: author, removeType: "one" },
          "üìå",
          "üé®",
          "üé¨",
          "üë§",
          "üéè",
          "üì•",
          "üòÜ",
          "640449832799961088",
        );
      else
        react = await context.previewMessage.awaitReact(
          { user: author, removeType: "one" },
          ...react,
        );

      switch (react) {
        case "üìå":
          context.questionMessage = await msg.msg({
            title: "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ üìå",
            color: context.embed.color,
          });
          answer = await msg.channel.awaitMessage({
            user: msg.author,
            remove: true,
          });
          context.questionMessage.delete();
          if (!answer) {
            continue;
          }

          const link = answer.content.match(/https:\/\/.+?(\s|$)/);
          if (link) {
            answer.content = answer.content.replace(link[0], "").trim();
            context.embed.setURL(link);
          }
          context.embed.setTitle(answer);

          break;

        case "üé®":
          answer = await msg.channel.awaitMessage(msg.author, {
            title: "–¶–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ: #2c2f33",
            embed: { color: embed.color },
          });
          if (!answer) {
            continue;
          }

          let color = answer.content.match(/[abcdef0-9]{6}|[abcdef0-9]{3}/i);
          if (!color) {
            msg.msg({
              title: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –≤–≤–µ–¥–∏—Ç–µ —Ü–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ HEX `#38f913`",
              color: "#ff0000",
              delete: 5000,
            });
            continue;
          }
          color = color[0].toLowerCase();
          color =
            color.length === 3 ? [...color].map((e) => e + e).join("") : color;

          context.embed.color = color;
          break;

        case "üé¨":
          answer = await msg.channel.awaitMessage(msg.author, {
            time: 1000000,
            title: "–û–ø–∏—Å–∞–Ω–∏–µ –∫ —Ñ–∏–ª—å–º—É üé¨",
            embed: { color: embed.color },
          });
          if (!answer) {
            continue;
          }
          context.embed.setDescription(answer);
          break;

        case "üë§":
          answer = await msg.channel.awaitMessage(msg.author, {
            title:
              "–£–ø–æ–º—è–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –∞–≤–∞—Ç–∞—Ä –∏ –Ω–∏–∫",
            embed: {
              description:
                "–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∏–∫–∞–∫–∏—Ö —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏ —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
              color: embed.color,
            },
          });
          if (!answer) {
            continue;
          }
          const user = answer.mentions.users.first();
          if (user) {
            context.embed.setAuthor({
              name: user.username,
              iconURL: user.avatarURL(),
            });
            break;
          }

          let image = answer.content.match(/https:\/\/.+?(\s|$)/);
          if (image) {
            answer.content = answer.content.replace(image[0], "").trim();
          }

          image = image ? image[0] : null;
          context.embed.setAuthor({ name: answer.content, iconURL: image });
          break;

        case "üéè":
          await context.previewMessage.reactions.removeAll();
          react = ["640449848050712587", "üß±", "ü™Ñ", "ü™§", "üïµÔ∏è"];
          break;

        case "üì•":
          answer = await msg.channel.awaitMessage(msg.author, {
            title: "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ñ—É—Ç–µ—Ä–∞",
            embed: {
              description: `–í–ø–∏—à–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –±—ã–ª–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞`,
              color: embed.color,
            },
          });
          if (!answer) {
            continue;
          }
          let url = answer.content.match(/https:\/\/.+?(\s|$)/);
          if (url) {
            answer.content = answer.content.replace(url[0], "").trim();
          }

          url = url ? url[0] : null;
          context.embed.setFooter(answer, url);
          break;

        case "üòÜ":
          await context.previewMessage.reactions.removeAll();
          const collector = await msg.msg({
            title:
              '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏–∏ –ø—Ä—è–º–æ –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!\n–ê –∑–∞—Ç–µ–º –∂–º—è–∫–Ω–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é"–ì–æ—Ç–æ–≤–æ"<:mark:685057435161198594>',
            color: embed.color,
          });
          react = await context.previewMessage.awaitReact(
            { user: author, removeType: "one" },
            "685057435161198594",
          );
          reactions = Array.from(collector.reactions.cache.keys());
          collector.delete();
          await context.previewMessage.reactions.removeAll();
          break;

        case "ü™§":
          answer = await msg.channel.awaitMessage(msg.author, {
            title: "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
            embed: {
              description: "–û–Ω–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å–ø—Ä–∞–≤–∞-—Å–≤–µ—Ä—Ö—É",
              color: embed.color,
            },
          });
          if (!answer) {
            continue;
          }
          if (!answer.content.startsWith("http")) {
            msg.msg({
              title: "–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
              color: "#ff0000",
              delete: 3000,
            });
            continue;
          }
          context.embed.setThumbnail(answer.content);
          react = ["640449848050712587", "üß±", "ü™Ñ", "ü™§", "üïµÔ∏è"];
          break;

        case "ü™Ñ":
          answer = await msg.channel.awaitMessage(msg.author, {
            title: "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
            embed: {
              description: "–û–Ω–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ —ç–º–±–µ–¥–∞",
              color: embed.color,
            },
          });
          if (!answer) {
            continue;
          }
          if (!answer.content.startsWith("http")) {
            msg.msg({
              title: "–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
              color: "#ff0000",
              delete: 3000,
            });
            continue;
          }
          context.embed.setImage(answer.content);
          react = ["640449848050712587", "üß±", "ü™Ñ", "ü™§", "üïµÔ∏è"];
          break;

        case "üß±":
          const name = await msg.channel.awaitMessage(msg.author, {
            title: "–£–∫–∞–∂–∏—Ç–µ –∏–º—è –¥–ª—è —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏",
            embed: {
              fields: [
                {
                  name: "–¢–∞–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è **–Ω–∞–∑–≤–∞–Ω–∏–µ**",
                  value: "–¢—É—Ç –±—É–¥–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ",
                },
              ],
              color: embed.color,
            },
          });
          if (!name) {
            continue;
          }
          const value = await msg.channel.awaitMessage(msg.author, {
            title: "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
            embed: {
              fields: [{ name: name, value: "–¢—É—Ç –±—É–¥–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ" }],
              color: embed.color,
            },
          });
          if (!value) {
            continue;
          }
          context.embed.addFields([{ name, value, inline: true }]);
          react = ["640449848050712587", "üß±", "ü™Ñ", "ü™§", "üïµÔ∏è"];
          break;

        case "üïµÔ∏è":
          answer = await msg.channel.awaitMessage(msg.author, {
            title:
              "–£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤–∞—Ç–∞—Ä –í–µ–±—Ö—É–∫–∞, –æ—Ç –∏–º–µ–Ω–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —ç–º–±–µ–¥-—Å–æ–æ–±—â–µ–Ω–∏–µ.",
            embed: {
              description:
                "–ï—Å–ª–∏ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–∂–µ –∏–º–µ—é—â–∏–π—Å—è –≤–µ–±—Ö—É–∫, —É–∫–∞–∂–∏—Ç–µ —Ç–æ–ª—å–∫–æ –µ–≥–æ –∏–º—è.\n–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–µ–±—Ö—É–∫.",
              color: embed.color,
            },
          });
          if (!answer) {
            continue;
          }

          const avatar = Util.match(answer, /http\S+/);
          if (avatar) {
            answer.content = answer.content.replace(avatar, "").trim();
          }

          context.embed.webhook = { name: answer.content, avatar };
          react = ["640449848050712587", "üß±", "ü™Ñ", "ü™§", "üïµÔ∏è"];
          msg.msg({
            title: "–£—Å–ø–µ—à–Ω–æ!",
            author: { name: answer.content, iconURL: avatar },
            delete: 3000,
          });
          break;

        case "640449848050712587":
          // Arror-Left
          await context.previewMessage.reactions.removeAll();
          break;

        case "640449832799961088":
          // Send Embed-Message
          await context.previewMessage.reactions.removeAll();
          const whatChannelSend = await msg.msg({
            title: "–í–≤–µ–¥–∏—Ç–µ –ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –µ–≥–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —ç–º–±–µ–¥–∞",
            color: embed.color,
            description:
              "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–∫—Ü–∏—é <:arrowright:640449832799961088>, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.",
          });
          answer = await Util.awaitReactOrMessage(
            whatChannelSend,
            msg.author,
            "640449832799961088",
          );
          whatChannelSend.delete();

          if (!answer) {
            continue;
          }

          let channel =
            answer === "640449832799961088"
              ? msg.channel
              : false ||
                answer.mentions.channels.first() ||
                msg.guild.channels.cache.get(answer.content) ||
                client.channels.cache.get(answer.content);

          if (!channel) {
            msg.channel.msg({
              title: "–ö–∞–Ω–∞–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
              color: "#ff0000",
              delete: 4500,
            });
            continue;
          }

          if (!channel.guild.members.resolve(msg.author)) {
            msg.channel.msg({
              title:
                "–í—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–µ–¥–Ω–∞–ª–µ–∂–∏—Ç —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≠–º–±–µ–¥-—Å–æ–æ–±—â–µ–Ω–∏–µ",
              color: "#ff0000",
              delete: 4500,
            });
            continue;
          }

          if (
            channel.guild.members
              .resolve(msg.author)
              .wastedPermissions(18432, channel)[0]
          ) {
            msg.channel.msg({
              title:
                "–í —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª–µ —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≠–º–±–µ–¥-—Å–æ–æ–±—â–µ–Ω–∏—è ",
              color: "#ff0000",
              delete: 4500,
            });
            continue;
          }

          if (context.embed.webhook) {
            const webhooks = await channel.fetchWebhooks();
            let hook = webhooks.find(
              (e) => e.name === context.embed.webhook.name,
            );

            if (hook && context.embed.webhook.avatar) {
              await webhook.edit({ avatar: context.embed.webhook.avatar });
            }

            if (!hook) {
              hook = await channel.createWebhook(context.embed.webhook.name, {
                avatar:
                  context.embed.webhook.avatar ||
                  "https://www.emojiall.com/images/240/openmoji/1f7e9.png",
                reason: `${msg.author.tag} (${msg.author.id}) Created a message with Embed-constructor`,
              });
            }
            channel = hook;
          }

          await channel.msg({ content: context.embed, reactions: reactions });
          react = ["‚úèÔ∏è", "‚ùå", "640449832799961088"];
          break;

        case "‚ùå":
          context.previewMessage.delete();
          return;

        case "‚úèÔ∏è":
          context.previewMessage.reactions.removeAll();
          break;

        default:
          return;
      }

      context.updatePreviewMessage();
    }
  }

  options = {
    name: "embed",
    id: 9,
    media: {
      description:
        "\n\n–°–æ–∑–¥–∞—ë—Ç —ç–º–±–µ–¥ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ.\n\n‚ùì –ö—Ä–æ–º–µ —Ç–æ–≥–æ, —á—Ç–æ —ç—Ç–æ –ª—é–±–∏–º–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤–µ—Å—å–º–∞ –ø—Ä–æ—Å—Ç –∏ –ø–æ–ª–µ–∑–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–∫—Ü–∏–∏, –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–º–±–µ–¥–∞\n\n‚úèÔ∏è\n```python\n!embed <JSON>\n```\n\n",
    },
    alias: "–µ–º–±–µ–¥ —ç–º–±–µ–¥",
    allowDM: true,
    cooldown: 3_00_00,
    type: "guild",
    ChannelPermissions: 16384,
  };
}

export default Command;
