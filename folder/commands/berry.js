import DataManager from '#lib/modules/DataManager.js';
import { Actions } from '#lib/modules/ActionManager.js';

class Command {
  static INFLATION = 0.2;
  static BERRYS_LIMIT = 35000;
  static TAX = 0.02;

	async onChatInput(msg, interaction){
    const MAX_LIMIT = this.constructor.BERRYS_LIMIT;
    const INFLATION = this.constructor.INFLATION;
    const TAX = this.constructor.TAX;

    let
      user        = interaction.userData,
      myBerrys    = user.berrys || (user.berrys = 0),
      marketPrise = DataManager.data.bot.berrysPrise,

      action      = interaction.params && interaction.params.split(" ")[0],
      quantity    = interaction.params && interaction.params.split(" ")[1];



    const getPrice = (quantity, isBuying = -1) => {
      quantity = isBuying === -1 ?
        Math.min(marketPrise / INFLATION, quantity)
        : quantity;

      // –ù–∞–ª–æ–≥
      const tax = isBuying !== -1 ? 1 : (1 - TAX);
      // –ò–Ω—Ñ–ª—è—Ü–∏—è
      const inflation = (quantity * INFLATION / 2) * isBuying;


      const price = Math.round( (marketPrise + inflation) * quantity * tax );
      return price;
    };

    if (interaction.mention) {
      myBerrys = interaction.mention.data.berrys || 0;
      msg.msg({title: "–ö–ª—É–±–Ω–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 
        description: `–ö–ª—É–±–Ω–∏—á–µ–∫ ‚Äî **${ myBerrys }** <:berry:756114492055617558>\n–†—ã–Ω–æ—á–Ω–∞—è —Ü–µ–Ω–∞ ‚Äî **${ Math.round(marketPrise) }** <:coin:637533074879414272>`,
        author: {name: interaction.mention.tag, iconURL: interaction.mention.avatarURL()},
        footer: {text: `–û–±—â–∞—è —Ü–µ–Ω–∞ —è–≥–æ–¥–æ–∫: ${ getPrice(myBerrys, -1) }`}
      });
      return;
    }

    const store = (quantity, isBuying) => {
      // buying == -1 || 1
      myBerrys = user.berrys;

      if (quantity === "+")
        quantity = myBerrys;

      quantity = Math.floor(quantity);

      if ( isNaN(quantity) ){
        msg.msg({title: "–£–∫–∞–∑–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –≤–º–µ—Å—Ç–æ —á–∏—Å–ª–∞", color: "#ff0000", delete: 5000});
        return;
      }

      if (quantity < 0){
        msg.msg({title: "–í–≤–µ–¥–µ–Ω–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n<:grempen:753287402101014649> ‚Äî –£–∫—É—à—É.", color: "#ff0000", delete: 5000});
        return;
      }

      if (isBuying < 0 && quantity > myBerrys){
        msg.msg({title: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å ${ quantity } <:berry:756114492055617558>, —É –≤–∞—Å –≤—Å–µ–≥–æ ${myBerrys}`, color: "#ff0000", delete: 5000});
        return;
      }

      if (isBuying > 0 && myBerrys + quantity > MAX_LIMIT){
        quantity = Math.max(MAX_LIMIT - myBerrys, 0);
      }

      let prise = getPrice(quantity, isBuying);


      if (isBuying > 0 && user.coins < prise) {
        msg.msg({title: `–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç ${prise - user.coins} <:coin:637533074879414272>`, delete: 5000});
        return;
      }

      user.coins -= prise * isBuying;
      user.berrys = myBerrys += quantity * isBuying;
      marketPrise = DataManager.data.bot.berrysPrise = Math.max(DataManager.data.bot.berrysPrise + quantity * INFLATION * isBuying, 0);

      msg.msg({title: (isBuying > 0) ? `–í—ã –∫—É–ø–∏–ª–∏ ${quantity} <:berry:756114492055617558>! –ø–æ—Ç—Ä–∞—Ç–∏–≤ ${ prise } <:coin:637533074879414272>!` : `–í—ã –ø—Ä–æ–¥–∞–ª–∏ ${quantity} <:berry:756114492055617558> –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${prise} <:coin:637533074879414272>!`, delete: 5000});
      msg.author.action(Actions.berryBarter, {quantity, msg, interaction, isBuying, prise});
    }

    if (quantity === "+")
      quantity = user.berrys;

    if (action == "buy"  || action == "–∫—É–ø–∏—Ç—å")  store(quantity, 1);
    if (action == "sell" || action == "–ø—Ä–æ–¥–∞—Ç—å") store(quantity, -1);

    let message = await msg.msg({description: `–£ –≤–∞—Å –∫–ª—É–±–Ω–∏—á–µ–∫ ‚Äî **${ myBerrys }** <:berry:756114492055617558>\n–†—ã–Ω–æ—á–Ω–∞—è —Ü–µ–Ω–∞ ‚Äî **${ Math.round(marketPrise) }** <:coin:637533074879414272>\n\n–û–±—â–∞—è —Ü–µ–Ω–∞ –≤–∞—à–∏—Ö —è–≥–æ–¥–æ–∫: ${ getPrice(myBerrys, -1) } (—Å —É—á—ë—Ç–æ–º –Ω–∞–ª–æ–≥–∞ ${ TAX * 100 }% –∏ –∏–Ω—Ñ–ª—è—Ü–∏–∏)\n\nüì• - –ü–æ–∫—É–ø–∫–∞ | üì§ - –ü—Ä–æ–¥–∞–∂–∞;`, author: {name: msg.author.tag, iconURL: msg.author.avatarURL()}})
    let react = await message.awaitReact({user: msg.author, removeType: "all"}, "üì•", "üì§");
    let answer, _questionMessage;

    while (true) {
      switch (react) {
        case "üì•":
          if (myBerrys >= MAX_LIMIT){
            msg.msg({title: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –±–æ–ª—å—à–µ. –õ–∏–º–∏—Ç ${ MAX_LIMIT }`, color: "#ff0000", delete: 5000});
            break;
          }

          const getMaxCount = (coins, price) => {

            const a = INFLATION / 2;
            const b = price;
            const c = -coins;

            const discriminant = b ** 2 - 4 * a * c;
            const x2 = (discriminant ** 0.5 - b) / (2 * a);

            return x2;
          }

          let maxCount = getMaxCount(interaction.userData.coins, marketPrise);

          maxCount = Math.min(maxCount, MAX_LIMIT - myBerrys);
          _questionMessage = await msg.msg({title: `–°–∫–æ–ª—å–∫–æ –∫–ª—É–±–Ω–∏–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?\n–ü–æ –Ω–∞—à–∏–º —Ä–∞—Å—á—ë—Ç–∞–º, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥–æ (${maxCount.toFixed(2)}) –µ–¥. <:berry:756114492055617558>`, description: "[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–æ—Å–æ–± —Ä–∞—Å—á—ë—Ç–∞](https://pastebin.com/t7DerPQm)"})
          answer = await msg.channel.awaitMessage({user: msg.author});
          _questionMessage.delete();

          if (!answer)
            break;

          if (answer.content === "+")
            answer.content = maxCount;

          store(answer.content, 1);
          break;
        case "üì§":
          _questionMessage = await msg.msg({title: "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á-–≤–æ –∫–ª—É–±–Ω–∏—á–µ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É"});
          answer = await msg.channel.awaitMessage({user: msg.author});
          _questionMessage.delete();

          if (!answer)
            break;

          store(answer.content, -1);
          break;
        default: return message.delete();
      }
      message = await message.msg({edit: true, description: `–£ –≤–∞—Å –∫–ª—É–±–Ω–∏—á–µ–∫ ‚Äî **${myBerrys}** <:berry:756114492055617558>\n–†—ã–Ω–æ—á–Ω–∞—è —Ü–µ–Ω–∞ ‚Äî **${ Math.round(marketPrise) }** <:coin:637533074879414272>\n\n–û–±—â–∞—è —Ü–µ–Ω–∞ –≤–∞—à–∏—Ö —è–≥–æ–¥–æ–∫: ${getPrice(myBerrys)} (—Å —É—á—ë—Ç–æ–º –Ω–∞–ª–æ–≥–∞ ${ TAX * 100 }% –∏ –∏–Ω—Ñ–ª—è—Ü–∏–∏)\n\nüì• - –ü–æ–∫—É–ø–∫–∞ | üì§ - –ü—Ä–æ–¥–∞–∂–∞;`, author: {name: msg.author.tag, iconURL: msg.author.avatarURL()}});
      react = await message.awaitReact({user: msg.author, removeType: "all"}, "üì•", "üì§");
    }
  }


	options = {
	  "name": "berry",
	  "id": 27,
	  "media": {
	    "description": "\n\n–ö–ª—É–±–Ω–∏–∫–∞ ‚Äî —è—Ä–∫–∏–π –∞–Ω–∞–ª–æ–≥ –∑–æ–ª–æ—Ç—ã—Ö —Å–ª–∏—Ç–∫–æ–≤, —Ü–µ–Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ø—Ä–æ—Å–∞.\n–ß–µ—Ä–µ–∑ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –µ—ë –ø–æ–∫—É–ø–∫–∞ –∏ –ø—Ä–æ–¥–∞–∂–∞, —Ç—É—Ç-–∂–µ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –∫—É—Ä—Å.\n\n‚úèÔ∏è\n```python\n!berry <\"–ø—Ä–æ–¥–∞—Ç—å\" | \"–∫—É–ø–∏—Ç—å\"> <count>\n```\n\n"
	  },
	  "allias": "–∫–ª—É–±–Ω–∏–∫–∞ –∫–ª—É–±–Ω–∏—á–∫–∏ —è–≥–æ–¥–∞ —è–≥–æ–¥—ã berrys –±–µ—Ä—Ä–∏",
		"allowDM": true,
		"cooldown": 15_000,
		"type": "user"
	};
};

export default Command;