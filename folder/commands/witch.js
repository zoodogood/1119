import * as Util from "#lib/util.js";
import DataManager from "#lib/modules/DataManager.js";
import { Actions } from "#lib/modules/ActionManager.js";
import { PropertiesEnum } from "#lib/modules/Properties.js";
import {
  KEYS_TO_UPGRADE_CHEST_TO_LEVEL_2,
  KEYS_TO_UPGRADE_CHEST_TO_LEVEL_3,
} from "#constants/users/commands.js";

class Command {
  bonusesBase = [
    {
      emoji: "üåÄ",
      id: "cooldownDecrease",
      description: "–£–º–µ–Ω—å—à–∞–µ—Ç –∫—É–ª–¥–∞—É–Ω –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—ã—Ç–∞ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ 0.2—Å",
      MAX_LEVEL: 20,
      MAX_WEIGHT: 100,
      _weight(user) {
        return (
          this.MAX_WEIGHT -
          (user.data.voidCooldown * (this.MAX_WEIGHT / this.MAX_LEVEL) || 0)
        );
      },
      filter(user) {
        return user.data.voidCooldown < this.MAX_LEVEL;
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.cooldownDecrease",
          resource: PropertiesEnum.voidCooldown,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "üîÖ",
      id: "creatureBonuses",
      LIMIT: 2_000,
      BONUSES_PER_RITUAL: 18,
      BASIC: 38,
      MULTIPLAYER: 1.5,
      calculate(user) {
        const value =
          (user.data.chestBonus * this.MULTIPLAYER || 0) +
          user.data.voidRituals * this.BONUSES_PER_RITUAL +
          this.BASIC;
        return Math.min(Math.round(value), this.LIMIT);
      },
      description(user) {
        return `–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å —Å—É–Ω–¥—É–∫–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ \`${this.calculate(
          user,
        )}\``;
      },
      _weight: 50,
      action(user, interaction) {
        const value = this.calculate(user);
        Util.addResource({
          user,
          value,
          executor: user,
          source: "command.witch.event.creatureBonuses",
          resource: PropertiesEnum.chestBonus,
          context: { interaction },
        });
      },
    },
    {
      emoji: "‚öúÔ∏è",
      id: "decreaseWitchPrice",
      MAX_LEVEL: 3,
      description() {
        return `–£–º–µ–Ω—å—à–∞–µ—Ç —Ü–µ–Ω—É –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ–∑–∂—ã–≥–∞ –∫–æ—Ç–ª–∞. (–ú–∞–∫—Å. –Ω–∞ ${
          this.MAX_LEVEL * 10
        }%)`;
      },
      _weight: 5,
      filter(user) {
        return user.data.voidPrice < this.MAX_LEVEL;
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.decreaseWitchPrice",
          resource: PropertiesEnum.voidPrice,
          executor: user,
          context: { interaction },
        });
      },
    },
    {
      emoji: "üÉè",
      id: "oddsToRestoreVoid",
      description:
        "–î–∞—ë—Ç 9%-–π —à–∞–Ω—Å –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —É—Ä–æ–≤–Ω–∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–æ –≤—Ä–µ–º—è —Ä–∏—Ç—É–∞–ª–∞.",
      _weight: 3,
      filter(user) {
        return !user.data.voidDouble;
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.cooldownDecrease",
          resource: PropertiesEnum.voidDouble,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "üî±",
      id: "hardQuests",
      MAX_LEVEL: 5,
      description:
        "–î–µ–ª–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∫–≤–µ—Å—Ç—ã –Ω–∞ 15% —Å–ª–æ–∂–Ω–µ–µ, –æ–¥–Ω–∞–∫–æ —Ç–∞–∫–∂–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∏—Ö –Ω–∞–≥—Ä–∞–¥—É –Ω–∞ 30%",
      _weight: 10,
      filter(user) {
        return user.data.voidQuests < this.MAX_LEVEL;
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.hardQuests",
          resource: PropertiesEnum.voidQuests,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "‚ú®",
      id: "starsCoinsMessages",
      BASIC: 20,
      BONUS_PER_RITUAL: 7,
      calculate(user) {
        return this.BASIC + user.data.voidRituals * this.BONUS_PER_RITUAL;
      },
      description(user) {
        const value = this.calculate(user);
        return `–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É –∫–æ–∏–Ω-—Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ ${value} –µ–¥.`;
      },
      _weight: 35,
      action(user, interaction) {
        const value = this.calculate(user);
        Util.addResource({
          user,
          value,
          source: "command.witch.event.starsCoinsMessages",
          resource: PropertiesEnum.coinsPerMessage,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "üí†",
      id: "robTrasures",
      description:
        "–î–∞—ë—Ç \\*–±–æ–Ω—É—ã —Å—É–Ω–¥—É–∫–∞* –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä—á–∞—Ç–æ–∫ –≤–∞–º —É–¥–∞–µ—Ç—Å—è –∫–æ–≥–æ-—Ç–æ –æ–≥—Ä–∞–±–∏—Ç—å.",
      _weight: 20,
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.robTreasures",
          resource: PropertiesEnum.voidThief,
          executor: user,
          context: { interaction },
        });
        return (user.data.voidThief = ++user.data.voidThief || 1);
      },
    },
    {
      emoji: "üòà",
      id: "smile",
      BASIC: 7,
      PER_RITUAL: 5,
      calculate(user) {
        return (
          this.BASIC +
          Math.floor(this.PER_RITUAL * user.data.voidRituals ** 0.5)
        );
      },
      description(user) {
        return `–°–æ–∑–¥–∞–π—Ç–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —Ö–∞–æ—Å, –∏–∑–º–µ–Ω–∏–≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–ª—É–±–Ω–∏–∫–∏ –Ω–∞ —Ä—ã–Ω–∫–µ! ${this.calculate(
          user,
        )} –∫–æ–∏–Ω–æ–≤ –≤ —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É.`;
      },
      _weight: 10,
      action(user) {
        return (DataManager.data.bot.berrysPrice +=
          this.calculate(user) * (-1) ** Util.random(1));
      },
    },
    {
      emoji: "üçµ",
      id: "updateCloverEffect",
      description: `–£–¥–≤–∞–∏–≤–∞–µ—Ç –¥–ª—è –≤–∞—Å –≤—Å—è–∫–∏–π –±–æ–Ω—É—Å –∫–ª–µ–≤–µ—Ä–∞\n–ù–µ—Å–∫–æ–ª—å–∫–æ –±–æ–Ω—É—Å–æ–≤ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è`,
      _weight: 2,
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.updateCloverEffect",
          resource: PropertiesEnum.voidMysticClover,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "üìø",
      id: "transformKeys",
      KEYS_PER_VOID: 100,
      calculate(user) {
        const voids = Math.floor(user.data.keys / this.KEYS_PER_VOID);
        const keys = user.data.keys - (user.data.keys % this.KEYS_PER_VOID);
        return { voids, keys };
      },
      description(user) {
        const { voids, keys } = this.calculate(user);
        return `–ü–æ–ª—É—á–∏—Ç–µ ${voids} —É—Ä. –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–∑–∞–º–µ–Ω ${keys} –∫–ª—é—á–µ–π.`;
      },
      _weight: 30,
      filter(user) {
        return user.data.keys >= this.KEYS_PER_VOID && user.data.chestLevel;
      },
      action(user, interaction) {
        const { keys, voids } = this.calculate(user);
        Util.addResource({
          user,
          value: -keys,
          source: "command.witch.event.transformKeys",
          resource: PropertiesEnum.keys,
          executor: user,
          context: { interaction },
        });
        Util.addResource({
          user,
          value: voids,
          source: "command.witch.event.transformKeys",
          resource: PropertiesEnum.void,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "‚ô¶Ô∏è",
      id: "luckyCoinOdds",
      MAX_LEVEL: 7,
      description: `–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∫–æ–∏–Ω-—Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ 10%!`,
      _weight: 15,
      filter(user) {
        return user.data.voidCoins < this.MAX_LEVEL;
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.luckyCoinOdds",
          resource: PropertiesEnum.voidCoins,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "üèµÔ∏è",
      id: "chestLevelIncrease",
      KEYS_FOR_FIRST_UPGRADE: KEYS_TO_UPGRADE_CHEST_TO_LEVEL_2,
      KEYS_FOR_SECOND_UPGRADE: KEYS_TO_UPGRADE_CHEST_TO_LEVEL_3,
      DESCRIPTION_VALUE_OFFSET: 2,
      getPrice(user) {
        return user.data.chestLevel
          ? this.KEYS_FOR_SECOND_UPGRADE
          : this.KEYS_FOR_FIRST_UPGRADE;
      },
      description(user) {
        const price = this.getPrice(user);
        return `–£–ª—É—á—à–∞–µ—Ç —Å—É–Ω–¥—É–∫ –¥–æ ${
          user.data.chestLevel + this.DESCRIPTION_VALUE_OFFSET
        } —É—Ä–æ–≤–Ω—è. –¢—Ä–µ–±—É–µ—Ç ${price} –∫–ª—é—á–µ–π.`;
      },
      _weight: Infinity,
      filter(user) {
        return (
          user.data.chestLevel !== 2 && user.data.keys >= this.getPrice(user)
        );
      },
      action(user, interaction) {
        const price = this.getPrice(user);
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.chestLevelIncrease",
          resource: PropertiesEnum.chestLevel,
          executor: user,
          context: { interaction },
        });
        Util.addResource({
          user,
          value: -price,
          source: "command.witch.event.chestLevelIncrease",
          resource: PropertiesEnum.keys,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "üíñ",
      id: "strongMonsters",
      description: `–í–∞—à–∏ –º–æ–Ω—Å—Ç—Ä—ã –±—É–¥—É—Ç –∑–∞—â–∏—â–∞—Ç—å –≤–∞—Å –æ—Ç –æ–≥—Ä–∞–±–ª–µ–Ω–∏–π –í–æ—Ä–æ–≤`,
      _weight: 3,
      filter(user) {
        return user.data.monster && !user.data.voidMonster;
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.strongMonsters",
          resource: PropertiesEnum.voidMonster,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "üìï",
      id: "treeFarm",
      description: `–í—ã –º–æ–∂–µ—Ç–µ –±—Ä–∞—Ç—å –Ω–∞ –æ–¥–Ω—É –∫–ª—É–±–Ω–∏–∫—É –±–æ–ª—å—à–µ —Å –¥–µ—Ä–µ–≤–∞. –¢–∞–∫–∂–µ –ø—Ä–∏ —Å–±–æ—Ä–µ –ø–æ–≤—ã—à–∞–µ—Ç –µ—ë —Ü–µ–Ω—É –Ω–∞ —Ä—ã–Ω–∫–µ`,
      _weight: 20,
      filter(user) {
        return "seed" in user.data;
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.treeFarm",
          resource: PropertiesEnum.voidTreeFarm,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "ü•Ç",
      id: "royaltyCasino",
      description: "–õ–æ—Ç–µ—Ä–µ–π–Ω—ã–π –±–∏–ª–µ—Ç–∏–∫ –∏–∑ –õ–∞–≤–∫–∏ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–∏–º –∫–∞–∑–∏–Ω–æ",
      _weight: 3,
      filter(user) {
        return !user.data.voidCasino;
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.royaltyCasino",
          resource: PropertiesEnum.voidCasino,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "üßµ",
      id: "tinThreadOfVoid",
      DECREASE_RITUALS_COUNT: 2,
      description(_user, interaction) {
        return `–ü–æ–ª—É—á–∏—Ç–µ —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏: 1‚Äì${
          interaction.minusVoids * 2
        }; –°–Ω–∏–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∫–æ—Ç–ª–∞ –Ω–∞ ${
          this.DECREASE_RITUALS_COUNT
        }.\n–ï—Å–ª–∏ –í–∞—à —É—Ä–æ–≤–µ–Ω—å –∫—Ä–∞—Ç–µ–Ω –¥–≤—É–º, –í—ã –ø–æ–ª—É—á–∏—Ç–µ –æ–¥–Ω—É –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å.`;
      },
      _weight: 15,
      filter(user) {
        return user.data.voidRituals > 4 && user.data.voidRituals < 20;
      },
      action(user, interaction) {
        const voids =
          Util.random(1, interaction.minusVoids * 2) + !(user.data.level % 2);

        Util.addResource({
          user,
          value: voids,
          source: "command.witch.event.tinThreadOfVoid",
          resource: PropertiesEnum.voidDouble,
          executor: user,
          context: { interaction },
        });
        Util.addResource({
          user,
          value: -(this.DECREASE_RITUALS_COUNT + 1),
          source: "command.witch.event.tinThreadOfVoid",
          resource: PropertiesEnum.voidRituals,
          executor: user,
          context: { interaction },
        });
        return;
      },
    },
    {
      emoji: "ü™∏",
      id: "freedomCurse",
      description: `–ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–º–µ—Ç—å –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–∫–ª—è—Ç–∏—è`,
      _weight: 40,
      filter(user) {
        return user.data.cursesEnded > 4 && !user.data.voidFreedomCurse;
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.freedomCurse",
          resource: PropertiesEnum.voidFreedomCurse,
          executor: user,
          context: { interaction },
        });
        return (user.data.voidFreedomCurse = 1);
      },
    },
    {
      emoji: "‚ùÑÔ∏è",
      id: "getVoidIce",
      // –•–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–Ω–æ–µ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ
      description: `–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞ 50% –±–æ–ª—å—à–µ –æ–ø—ã—Ç–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥—Ä–∞–±–∏—Ç—å –±–µ–∑ —Ä–∏—Å–∫–æ–≤ –¥–æ –º–æ–º–µ–Ω—Ç–∞, –ø–æ–∫–∞ –≤–∞—Å –Ω–µ –ø–æ—Ö–≤–∞–ª—è—Ç, –ù–û –≤–∞—Å –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ—Ö–≤–∞–ª–∏—Ç—å.`,
      _weight: 1,
      filter(user) {
        return (
          (!user.data.voidIce && !user.data.praiseMe) ||
          !user.data.praiseMe.length
        );
      },
      action(user, interaction) {
        Util.addResource({
          user,
          value: 1,
          source: "command.witch.event.getVoidIce",
          resource: PropertiesEnum.voidIce,
          executor: user,
          context: { interaction },
        });
        user.action(Actions.globalQuest, { name: "coolingSenses" });
        return;
      },
    },
  ];

  displayStory(interaction) {
    let storyContent = "";
    const add = (content) => (storyContent = `${content}\n${storyContent}`);
    const user = interaction.user;

    switch (user.data.voidRituals) {
      case 23:
        add("–ú—ã –Ω–µ –∑–Ω–∞–µ–º —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –¥–∞–ª—å—à–µ. . .");
        break;
      case 22:
        add("...");
        break;
      case 19:
        user.action(Actions.globalQuest, { name: "completeTheGame" });
        add(
          "–ù–æ –¥–æ–ª–∂–µ–Ω –ª–∏ —è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è? –í—Å–µ–ª–µ–Ω–Ω—ã—Ö, –∫–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, –±–µ—Å—á–∏—Å–ª–µ–Ω–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å... –ü–æ–≥–ª–æ—â–∞—è —Å–∞–º–æ–≥–æ —Å–µ–±—è —Å–Ω–æ–≤–∞, –∏ —Å–Ω–æ–≤–∞, –º–Ω–µ, –≤–æ–∑–º–æ–∂–Ω–æ, —É–¥–∞—Å—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ê —Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω–æ–π —Å–∏–ª–æ–π —è —Å–æ–∑–¥–∞–º –∏–¥–µ–∞–ª—å–Ω—ã–π –º–∏—Ä..!",
        );
        add(
          "‚Äî –ü–æ–ª—É—á–∞–µ—Ç—Å—è —è —É–±–∏–ª –∏—Ö, —É–Ω–∏—á—Ç–æ–∂–∏–ª —Ü–µ–ª—ã–µ –≤—Å–µ–ª–µ–Ω–Ω—ã–µ, –º–∏—Ä—ã.. –ö–∞–∂–¥—ã–π —Ä–∞–∑ —è –ø–æ–ø–∞–¥–∞—è –≤ –Ω–æ–≤—É—é –≤—Å–µ–ª–µ–Ω–Ω—É—é, –∑–∞–º–µ–Ω—è–ª —Å–æ–±–æ—é —Å–µ–±—è, —É–Ω–∏—á—Ç–æ–∂–∞—è –º–∏–Ω—É–≤—à–∏–π –º–∏—Ä. –ù–µ—É–∂–µ–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ–ª—å–∑—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å.. –ù–µ—É–∂–µ–ª–∏ —ç—Ç–æ –∫–æ–Ω–µ—Ü?",
        );
      case 18:
      case 17:
        add("");
        add(
          "‚Äî –° –∫–∞–∂–¥—ã–º –¥–Ω–µ–º —è –æ—â—É—â–∞—é –±–æ–ª—å—à—É—é —Å–∏–ª—É, –Ω–∞—á–∏–Ω–∞—é –∑–∞–¥—É–º—ã–≤–∞—Ç—å—Å—è –æ –≤–µ—â–∞—Ö, –æ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–Ω—å—à–µ –∏ —Å–ª—ã—à–∞—Ç—å –Ω–µ —Å–º–µ–ª. –ú–µ–Ω—è –ø–æ—Å–µ—â–∞—é—Ç —Å—Ç—Ä–∞–Ω–Ω—ã–µ –º—ã—Å–ª–∏, –Ω–æ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –º–µ–Ω—è –±–µ—Å–ø–æ–∫–æ–∏—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–∞.",
        );
      case 16:
        add("");
        add(
          "‚Äî –ü—Ä–æ—à–ª–æ –Ω–µ –º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∏—Ç—É–∞–ª–∞, —è –≤—Å—ë —Ç–∞–∫ –∂–µ –ø—ã—Ç–∞—é—Å—å –ø–æ–Ω—è—Ç—å —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–∏ –∑–Ω–∞–∫–æ–º—ã–µ —Å—Ç–∞–ª–∏ —Å—á–∏—Ç–∞—Ç—å –º–µ–Ω—è —Å—É–º–∞c—à–µ–¥—à–∏–º. –°—Ç—Ä–∞–Ω–Ω–æ, —á—Ç–æ –Ω–∏–∫—Ç–æ –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤–∏–¥–µ–ª –Ω–∏–∫–∞–∫–∏—Ö –≤—Å–ø—ã—à–µ–∫ –≤ –Ω–µ–±–µ, –∫–∞–∫ –∏—Ö –º–æ–∂–Ω–æ –Ω–µ –∑–∞–º–µ—Ç–∏—Ç—å? –ù–∏–∫–∞–∫.",
        );
      case 15:
        add("");
        add(
          "–ú–æ–∂–µ—Ç —è —Å–æ—à—ë–ª —Å —É–º–∞, –∏–ª–∏ —è —É–º–µ—Ä, –∞ —Ç–æ —á—Ç–æ —è —á—É–≤—Å—Ç–≤—É—é —ç—Ç–æ –æ—Å—Ç–∞—Ç–∫–∏ –º–æ–µ–π —Å–∞–º–æ—Å—Ç–∏, –µ—ë –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —è –≤–Ω–æ–≤—å –∏ –≤–Ω–æ–≤—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ —á—É–≤—Å—Ç–≤—É—é?.. –Ø –Ω–µ –∑–Ω–∞—é",
        );
        add(
          '–ù–µ—Ç, —ç—Ç–æ –Ω–µ –º–æ–≥ –±—ã—Ç—å —Å–æ–Ω! –°–Ω–æ–≤–∞ –≤—Å–ø–æ–º–∏–Ω–∞—è –∫–∞–∂–¥—ã–π –æ–≥–æ–Ω—ë–∫, –∫–∞–∂–¥—É—é "—Ç—Ä–µ—â–∏–Ω—É", —Ä–æ–∂–¥–∞—é—â—É—é—Å—è –≤ –Ω–µ–±–µ, –∏ –≤—Å—ë —Ç–æ, —Å—Ç—Ä–∞–Ω–Ω–æ–µ, —á—Ç–æ —Ç–æ–≥–¥–∞ –±—ã–ª–æ...',
        );
      case 14:
      case 13:
      case 12:
      case 11:
      case 10:
        add(
          "–†–∞–∑–º—ã—à–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–º –≤–µ—Å—å –¥–µ–Ω—å –Ω–µ –ø–æ–∫–∏–¥–∞–ª–∏ –≤–∞—Å, —á—É–≤—Å—Ç–≤–æ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–∞ –Ω–µ –ø–æ–∑–≤–æ–ª—è–ª–æ –¥—É–º–∞—Ç—å –æ –¥—Ä—É–≥–æ–º.. –ú—ã—Å–ª—è–º–∏ –≤—ã —Å–Ω–æ–≤–∞, –∏ —Å–Ω–æ–≤–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç–µ—Å—å —Ç—É–¥–∞, –≥–¥–µ –≤—Å—ë —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–ª–æ—Å—å.",
        );
      case 9:
      case 8:
      case 7:
      case 6:
      case 5:
        add(
          "–î–∞–∂–µ –≤–∞—à–∞ —Å–æ–±–∞–∫–∞ –º–æ–∂–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å, —á—Ç–æ –≤—á–µ—Ä–∞ –≤–µ—Å—å –¥–µ–Ω—å –≤—ã –±—ã–ª–∏ –≤ —Å–≤–æ–µ–π –∫—Ä–æ–≤–∞—Ç–∏ –∏ –∏–≥—Ä–∞–ª–∏ –≤ –≤–∏–¥–µ–æ-–∏–≥—Ä—ã. –ö–∞–∫ –∏ –≤–∞—à –¥—Ä—É–≥, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–≥–¥–∞ –≤—ã–Ω–æ—Å–∏–ª –≤–∞—Å –≤ —Ç–∞–Ω—á–∏–∫–∞—Ö, —Å–∫–∞–∂–µ—Ç —Ç–æ –∂–µ, —á—Ç–æ –∏ –ø—ë—Å.",
        );
      case 4:
        add(
          "–ù–µ—Ç, —ç—Ç–æ –Ω–µ –º–æ–≥ –±—ã—Ç—å —Å–æ–Ω, –≤—Å–ø–æ–º–∏–Ω–∞—è –∫–∞–∂–¥—ã–π –ª–µ—Ç–∞—é—â–∏–π –≤ —á–µ—Ä–Ω–æ–º –Ω–µ–±–µ –æ–≥–æ–Ω—ë–∫, –¥—É–º–∞–µ—Ç–µ –≤—ã. –ù–æ —Ñ–∞–∫—Ç—ã –≥–æ–≤–æ—Ä—è—Ç –æ–±—Ä–∞—Ç–Ω–æ–µ..",
        );
      case 3:
      case 2:
        add("");
        add("–í—Å—ë –±—ã–ª–æ —Ç–∞–∫–æ–µ —è—Ä–∫–æ–µ –∏ –∫—Ä–∞—Å–æ—á–Ω–æ–µ..");
      case 1:
        add(
          "–í–ø–µ—Ä–µ–¥–∏ —Å—Ç–æ—è–ª–∞ –Ω–µ–æ–±—ä—è—Å–Ω–∏–º–æ-–Ω–µ–æ–±—ä—è—Å–Ω–∏–º–∞—è –¥–≤–µ—Ä—å, –∑–∞ –∫–æ—Ç–æ—Ä–æ–π –≤–∏–¥–Ω–µ–ª–∞—Å—å –≤–∞—à–∞ –∫–æ–º–Ω–∞—Ç–∞. –í–æ–π–¥—è, –≤—ã –ø—Ä–æ—Å—ã–ø–∞–µ—Ç–µ—Å—å –Ω–∞ —Å–≤–æ–µ–π –∫—Ä–æ–≤–∞—Ç–∏, –≤–æ–∫—Ä—É–≥ –≤—Å—ë –∫–∞–∫ —Ä–∞–Ω—å—à–µ. –û—â—É—â–∞–µ—Ç–µ —Å–µ–±—è, –∫–∞–∫ –Ω–∏–∫–æ–≥–¥–∞ —Ö–æ—Ä–æ—à–æ, –Ω–æ —Å –ø–æ–º—É—Ç–Ω—ë–Ω–Ω—ã–º —Ä–∞–∑—É–º–æ–º.",
        );
        add(
          "*–Ø—Ä–∫–∞—è –≤—Å–ø—ã—à–∫–∞ –∫–æ—Ç–ª–∞ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏–ª–∞ –≤ —ç—Ç–æ–º –º–∏—Ä–µ, –æ–Ω –Ω–∞—á–∞–ª —Ä–∞–∑—Ä—É—à–∞—Ç—å—Å—è.*",
        );
        break;
      default:
        add("...");
    }
    const title = `–î–µ–Ω—å ${Math.round(user.data.voidRituals ** 2.093 / 1.3)}.`;
    interaction.channel.msg({
      title,
      description: storyContent,
      image:
        user.data.voidRituals === 19
          ? "https://media.discordapp.net/attachments/629546680840093696/843562906053640202/2.jpg?width=1214&height=683"
          : "https://media.discordapp.net/attachments/629546680840093696/836122708185317406/mid_250722_922018.jpg",
      footer: {
        iconURL: interaction.user.avatarURL(),
        text: interaction.user.username,
      },
      color: "#000001",
    });
  }

  calculateRitualPrice(userData, guildData) {
    const treeLevelBonus = Math.floor((guildData.treeLevel ?? 0) / 10);

    const basic = Math.min(2 + userData.voidRituals, 20) - treeLevelBonus;
    const multiplayer = 1 - 0.1 * (userData.voidPrice || 0);
    return Math.floor(basic * multiplayer);
  }

  async boilerChoise({ interaction, boiler }) {
    const user = interaction.user;

    const getWeight = (bonus) =>
      typeof bonus._weight === "function"
        ? bonus._weight(user, interaction)
        : bonus._weight;

    const bonusesList = this.bonusesBase
      .filter((bonus) => !bonus.filter || bonus.filter(user, interaction))
      .map((bonus) => ({ ...bonus, _weight: getWeight(bonus) }));

    const bonuses = [...new Array(3)].map(() =>
      bonusesList.random({ pop: true, weights: true }),
    );

    const getDescription = (bonus) =>
      typeof bonus.description === "function"
        ? bonus.description(user, interaction)
        : bonus.description;
    const bonusesDescriptionContent = bonuses
      .map((bonus) => `${bonus.emoji}${getDescription(bonus)}`)
      .join("\n\n");

    await boiler.msg({
      title:
        "<a:placeForVoid:780051490357641226> –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å",
      description: `–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≤—Å–µ–≥–æ –æ–¥–Ω–æ —Å–æ–∫—Ä–æ–≤–∏—â–µ, —Ö–æ—Ä–æ—à–µ–Ω—å–∫–æ –ø–æ–¥—É–º–∞–π—Ç–µ, –ø—Ä–µ–∂–¥–µ —á–µ–º —á—Ç–æ-—Ç–æ –≤–∑—è—Ç—å.\n${bonusesDescriptionContent}`,
      edit: true,
      color: "#3d17a0",
    });

    const react =
      (await boiler.awaitReact(
        { user: interaction.user, removeType: "all" },
        ...bonuses.map((bonus) => bonus.emoji),
      )) || bonuses.random().emoji;

    bonuses.find((bonus) => bonus.emoji === react).action(user, interaction);

    boiler.msg({
      title: "–†–∏—Ç—É–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω...",
      description: `–í—ã –≤—ã–±—Ä–∞–ª–∏ ${react}\n–û—Å—Ç–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –±–æ–ª–µ–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.\n\n${bonusesDescriptionContent}`,
      color: "#3d17a0",
      edit: true,
    });
    return;
  }

  displayVoidNotEnought({ interaction, userData, reference = null }) {
    const description = `–î–æ–±—É–¥—å—Ç–µ –µ—â—ë ${Util.ending(
      interaction.minusVoids - userData.void,
      "—É—Ä–æ–≤",
      "–Ω–µ–π",
      "–µ–Ω—å",
      "–Ω—è",
    )} –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ <a:placeForVoid:780051490357641226>\n–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–∏—Ç—É–∞–ª –Ω—É–∂–Ω–æ ${Util.ending(
      interaction.minusVoids,
      "–∫–∞–º–Ω",
      "–µ–π",
      "—å",
      "—è",
    )}, –∞ —É –≤–∞—Å –ª–∏—à—å ${
      userData.void
    };\n–ò—Ö –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å, —Å –Ω–∏–∑–∫–∏–º —à–∞–Ω—Å–æ–º, –æ—Ç–∫—Ä—ã–≤–∞—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Å—É–Ω–¥—É–∫.\n–ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Ä–∏—Ç—É–∞–ª–æ–≤: ${
      userData.voidRituals
    }\n–ö–æ—Ç—ë–ª –¥–∞—ë—Ç –ø–æ–ª–µ–∑–Ω—ã–µ –±–æ–Ω—É—Å—ã, –∞ —Ç–∞–∫–∂–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—ã—Ç–∞.`;
    const footer = {
      text: [
        "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫—É–¥–∞ –¥–µ–ª–∏—Å—å –≤—Å–µ –≤–µ–¥—å–º—ã?",
        "–ü—Ä–∞–≤–∏–ª–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –Ω–æ–º–µ—Ä 5:\n–ù–ò–ö–û–ì–î–ê –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ.*",
        "–ù–µ–ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏ ‚Äî –ª—É—á—à–∏–µ –¥—Ä—É–∑—å—è —Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å–≤–µ—Ç—è—â–∏—Ö—Å—è –∫–æ—Ç–æ–≤.",
        "–ë–µ—Ä–µ–≥–∏—Ç–µ—Å—å –º—è—É–∫–∞—é—â–∏—Ö —Å–æ–∑–¥–∞–Ω–∏–π.",
      ].random(),
    };
    interaction.channel.msg({
      title: "<a:void:768047066890895360> –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ä–µ—Å—É—Ä—Å–∞",
      description,
      color: "#3d17a0",
      footer,
      reference,
    });
  }

  calculateExperienceBonus(userData) {
    return Math.max(0.97716 ** userData.voidRituals, 0.01);
  }

  getContext(interaction) {
    return { interaction };
  }

  async onChatInput(msg, interaction) {
    // <a:void:768047066890895360> <a:placeForVoid:780051490357641226> <a:cotik:768047054772502538>

    if (interaction.mention) {
      const userData = interaction.mention.data;
      msg.msg({
        title:
          "<a:cotik:768047054772502538> –î—Ä—É–≥ —Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —Å–≤–µ—Ç—è—â–µ–≥–æ—Å—è –∫–æ—Ç–∞ ‚Äî –º–æ–π –¥—Ä—É–≥",
        description: `–°–µ–≥–æ–¥–Ω—è –í—ã –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. –ó–∞–∫–æ–Ω–Ω–æ –ª–∏ —ç—Ç–æ? –ö–æ–Ω–µ—á–Ω–æ –∑–∞–∫–æ–Ω–Ω–æ, –æ–Ω –Ω–µ –ø—Ä–æ—Ç–∏–≤.\n${
          userData.name
        }, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ—Ç—ë–ª ${
          userData.voidRituals
        } —Ä–∞–∑.\n–ï–≥–æ –±–æ–Ω—É—Å –∫ –æ–ø—ã—Ç—É: ${(
          100 *
          (1 - this.calculateExperienceBonus(userData) + 1)
        ).toFixed(
          2,
        )}% –æ—Ç –∫–æ—Ç–ª–∞.\n<a:placeForVoid:780051490357641226>\n\n–°—ä–µ—à—å –µ—â—ë —ç—Ç–∏—Ö —Ñ—Ä–∞–Ω—Ü—É–∑–∫–∏—Ö –±—É–ª–æ–∫, –¥–∞ –≤—ã–ø–µ–π —á–∞—é`,
        color: "#3d17a0",
      });
      return;
    }

    const userData = interaction.userData;
    interaction.minusVoids = this.calculateRitualPrice(
      userData,
      interaction.guild.data,
    );

    if (userData.void < interaction.minusVoids) {
      this.displayVoidNotEnought({ userData, interaction });
      return;
    }

    const boilerMessage = await msg.msg({
      title:
        "<a:placeForVoid:780051490357641226> –ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –æ—Ç–¥–∞—Ç—å —Å–≤–æ–∏ —É—Ä–æ–≤–Ω–∏ –∑–∞ –≤–µ—á–Ω—ã–µ —É—Å–∏–ª–µ–Ω–∏—è..?",
      description: `–ü–æ—Ç—Ä–∞—Ç—å—Ç–µ ${
        interaction.minusVoids
      } —É—Ä. –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –±—ã—Å—Ç—Ä–µ–µ, —Å–∏–ª—å–Ω–µ–µ –∏ —Ö–∏—Ç—Ä–µ–µ.\n~ –ü–æ–≤—ã—à–∞–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –æ–ø—ã—Ç–∞ –Ω–∞ 2%\n–ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Ä–∏—Ç—É–∞–ª–æ–≤: ${
        userData.voidRituals
      }\n–ë–æ–Ω—É—Å –∫ –æ–ø—ã—Ç—É: ${(
        100 *
        (1 - this.calculateExperienceBonus(userData) + 1)
      ).toFixed(
        2,
      )}%\n\n–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω–æ –∏–∑ —Ç—Ä—ë—Ö —Å–æ–∫—Ä–æ–≤–∏—â, –¥–∞—Ä—É—é—â–∏—Ö –≤–∞–º –Ω–µ–π–º–æ–≤–µ—Ä–Ω—É—é –º–æ—â—å!\n<a:cotik:768047054772502538>`,
      color: "#3d17a0",
    });
    const isHePay = await boilerMessage.awaitReact(
      { user: interaction.user, removeType: "all" },
      "768047066890895360",
    );

    if (!isHePay) {
      boilerMessage.msg({
        title: "–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã.",
        description: "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ä–∏—Ç—É–∞–ª–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ",
        edit: true,
        color: "#3d17a0",
      });
      return;
    }

    if (userData.void < interaction.minusVoids) {
      this.displayVoidNotEnought({
        userData,
        interaction,
        reference: boilerMessage.id,
      });
      boilerMessage.delete();
      return;
    }

    await Util.sleep(1000);

    // –í—ã –Ω–µ –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å
    if (userData.voidDouble && Util.random(11) === 1) {
      interaction.minusVoids = 0;
    }

    Util.addResource({
      user: interaction.user,
      value: -interaction.minusVoids,
      source: "command.witch.ritual",
      resource: PropertiesEnum.void,
      executor: interaction.user,
      context: { interaction },
    });

    Util.addResource({
      user: interaction.user,
      value: 1,
      source: "command.witch.ritual",
      resource: PropertiesEnum.voidRituals,
      executor: interaction.user,
      context: { interaction },
    });

    await this.boilerChoise({ userData, interaction, boiler: boilerMessage });

    await Util.sleep(3000);
    this.displayStory(interaction);
    return;
  }

  options = {
    name: "witch",
    id: 48,
    media: {
      description:
        "\n\n–ö–æ—Ç–µ–ª–æ–∫ –¥–∞—ë—Ç –Ω–µ–ø–ª–æ—Ö–∏–µ –±–æ–Ω—É—Å—ã, –∞ —Ç–∞–∫ –∂–µ –≤–≤–æ–¥–∏—Ç –∫–æ–Ω—Ü–æ–≤–∫—É –≤ –±–æ—Ç–µ ‚Äî –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ—Ç—ë–ª 20 —Ä–∞–∑, –≤—ã —Ä–∞—Å–∫—Ä–æ–µ—Ç–µ –µ—ë, –ø–æ–ø—É—Ç–Ω–æ —á–∏—Ç–∞—è –Ω–µ–±–æ–ª—å—à–æ–π —Ä–∞—Å—Å–∫–∞–∑ –∏ —É–Ω–∏—á—Ç–æ–∂–∏–≤ –ø–∞—Ä–æ—á–∫—É –≤—Å–µ–ª–µ–Ω–Ω—ã—Ö.\n\n‚úèÔ∏è\n```python\n!witch #–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤\n```\n\n",
    },
    alias: "boiler –∫–æ—Ç—ë–ª –∫–æ—Ç–µ–ª –≤–µ–¥—å–º–∞ –≤—ñ–¥—å–º–∞",
    allowDM: true,
    type: "user",
  };
}

export default Command;
