import * as Util from '#lib/util.js';
import CounterManager from '#lib/modules/CounterManager.js';
import { ButtonStyle, ComponentType, escapeMarkdown } from 'discord.js';
import { CommandsManager } from '#lib/modules/mod.js';

class Command {

	async onChatInput(msg, interaction){
 
    if (CounterManager.data.filter(counter => counter.guildId === interaction.guild.id).length >= 15){
      interaction.channel.msg({title: "–ú–∞–∫—Å–∏–º—É–º 15 —Å—á—ë—Ç—á–∏–∫–æ–≤", color: "#ff0000", delete: 12_000});
      return;
    }

    const context = {
      interaction,
      questionMessage: null,
      typeBase: null,
      template: null,
      counter: {}
    }
    
    const counterTypes = [...CounterManager.countersTypes.values()];

    context.questionMessage = await msg.msg({
      title: "ü™Ñ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Å—á—ë—Ç—á–∏–∫–∞",
      description: `–°—á—ë—Ç—á–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –∫–∞–Ω–∞–ª–∞–º–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.\n–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤—É –¥–ª—è –¥–∞–ª—å–Ω–µ–ª—å—à–µ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\n\n${ counterTypes.map(({label, description}) => `‚ùØ ${ label.toUpperCase() }\n> ${ description }.\n> ‚Äã`).join("\n") }`
    });
    const takeCounterType = async (context) => {
      const reactions = counterTypes.map(({emoji}) => emoji);
      const reaction = await context.questionMessage.awaitReact({user: msg.author, removeType: "all"}, ...reactions);
      return counterTypes.find(({emoji}) => emoji === reaction);
    }
    context.typeBase = await takeCounterType(context);
    
    if (!context.typeBase){
      context.questionMessage.delete();
      return;
    }
    context.questionMessage.msg({title: "ü™Ñ –û—Ç–ª–∏—á–Ω–æ! –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —à–∞–±–ª–æ–Ω–æ–≤", description: "–ö–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç —Å—á—ë—Ç—á–∏–∫ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Å–≤–æ—ë –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞", edit: true});
    context.template = (await interaction.channel.awaitMessage({user: msg.author}))?.content;

    context.questionMessage.delete();
    if (!context.template){
      return;
    }

    if (!context.template.match(/\{(?:.|\n)+?\}/)){
      interaction.message.msg({title: "–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç —à–∞–±–ª–æ–Ω—ã.", color: "#ff0000", delete: 5000});
      return;
    }

    const counter = await context.typeBase.change(context);
    if (!counter){
      return;
    }
    const { result } = await CounterManager.create(counter);
    await this.displayCreateOutput({interaction, result});
  }

  async displayCreateOutput({interaction, result, counter}){
    const embed = {
      title: "–°—á—ë—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω",
      description: `**–†–µ–∑—É–ª—å—Ç–∞—Ç:** ${ result instanceof Error ? "–∏—Å–∫–ª—é—á–µ–Ω–∏–µ" : "—É—Å–ø–µ—Ö" }.\n${ escapeMarkdown( String(result).slice(0, 1000) ) }`,
      components: [
        {
          type: ComponentType.Button,
          customId: "open-list",
          label: "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å—á—ë—Ç—á–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞",
          style: ButtonStyle.Secondary
        },
        {
          type: ComponentType.Button,
          customId: "delete-counter",
          label: "–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Å—á—ë—Ç—á–∏–∫",
          style: ButtonStyle.Secondary
        }
      ]
    };
    const message = await interaction.message.msg(embed);

    const filter = ({user}) => interaction.user === user;
    const collector = message.createMessageComponentCollector({max: 1, filter, time: 100_000});

    const countersCommand = CommandsManager.callMap.get("counters");
    collector.on("collect", async interaction => {
      const customId = interaction.customId;
      customId === "delete-counter" && CounterManager.delete(counter);
      customId === "open-list" && countersCommand.onChatInput(interaction.message, interaction);
    });
    collector.on("end", () => message.msg({edit: true, components: []}));

    return;
  }


	options = {
	  "name": "counter",
	  "id": 42,
	  "media": {
	    "description": "\n\n–û—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É ‚Äî —Å –ø–æ–º–æ—â—å—é —à–∞–±–ª–æ–Ω–æ–≤ —Å–æ–∑–¥–∞–π—Ç–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç. –°—á—ë—Ç—á–∏–∫–∏ –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å –∫–∞–∫ –∏–º—è –ª—é–±–æ–≥–æ –∫–∞–Ω–∞–ª–∞, —Ç–∞–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n‚úèÔ∏è\n```python\n!counter #–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤\n```\n\n"
	  },
	  "alias": "—Å—á—ë—Ç—á–∏–∫ —Å—á–µ—Ç—á–∏–∫ count —Ä–∞—Ö—ñ–≤–Ω–∏–∫",
		"allowDM": true,
		"type": "guild",
		"Permissions": 16
	};
};

export default Command;