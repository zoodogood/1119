import { BaseCommand } from "#lib/BaseCommand.js";
import * as Util from "#lib/util.js";
import { client } from "#bot/client.js";
import Discord from "discord.js";
import { PropertiesEnum } from "#lib/modules/Properties.js";

class Command extends BaseCommand {
  async onChatInput(msg, interaction) {
    const heAccpet = await Util.awaitUserAccept({
      name: "charity",
      message: {
        title:
          "–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç—Ç–æ —Ö–æ—Ä–æ—à–æ, –Ω–æ –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –∫–æ–∏–Ω—ã!",
        description: "–í–∞—à–∏ –±–æ–≥–∞—Ç—Å–≤–∞ –±—É–¥—É—Ç —Ä–∞–∑–¥–∞–Ω—ã –ª—é–¥—è–º —Å —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.",
      },
      channel: msg.channel,
      userData: interaction.userData,
    });
    if (!heAccpet) {
      return;
    }

    const { guild } = interaction;

    let cash = interaction.params.match(/\d+|\+/);

    if (!cash) {
      msg.msg({
        title: "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–ª-–≤–æ –∫–æ–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–¥–∞—Ç—å",
        delete: 5000,
        color: "#ff0000",
      });
      msg.react("‚ùå");
      return;
    }
    cash = cash[0];
    interaction.params = interaction.params.replace(cash, "").trim();

    if (cash === "+") {
      cash = interaction.userData.coins;
    }

    cash = Number(cash);

    if (cash < 200) {
      msg.msg({
        title: "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ ‚Äî 200 –∫–æ–∏–Ω–æ–≤",
        delete: 5000,
        color: "#ff0000",
      });
      msg.react("‚ùå");
      return;
    }

    if (cash > interaction.userData.coins) {
      msg.msg({ title: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤", delete: 5000, color: "#ff0000" });
      msg.react("‚ùå");
      return;
    }

    let countUsers = interaction.params.match(/\d+/);
    let needCash;
    if (countUsers) {
      countUsers = countUsers[0];
      needCash =
        200 +
        Math.max(countUsers - 20, 0) * 250 * 2 ** Math.floor(countUsers / 10);
      interaction.params = interaction.params.replace(countUsers, "").trim();
    }

    if (cash < needCash) {
      msg.msg({
        title: "–ú–∞–ª–æ –∫–æ–∏–Ω–æ–≤",
        description: `–î–ª—è –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ (${Util.ending(
          countUsers,
          "—á–µ–ª–æ–≤–µ–∫",
          "",
          "",
          "–∞",
        )}) —Ç—Ä–µ–±—É–µ—Ç –º–∏–Ω–∏–º—É–º ${needCash} –∫–æ–∏–Ω–æ–≤!`,
        delete: 8000,
        color: "#ff0000",
      });
      msg.react("‚ùå");
      return;
    }

    const note = interaction.params;

    const count = countUsers || Util.random(11, 22),
      members = [
        ...guild.members.cache
          .filter(
            (member) => !member.user.bot && member.user.id !== msg.author.id,
          )
          .random(count)
          .filter(Boolean),
      ],
      coinsForEvery = Math.floor(cash / members.length);

    Util.addResource({
      user: interaction.user,
      value: -cash,
      executor: interaction.user,
      source: "command.charity",
      resource: PropertiesEnum.coins,
      context: { interaction, members, coinsForEvery, countUsers },
    });
    for (const member of members) {
      const { user } = member;
      Util.addResource({
        user,
        value: coinsForEvery,
        executor: interaction.user,
        source: "command.charity",
        resource: PropertiesEnum.coins,
        context: { interaction, members, coinsForEvery, countUsers },
      });
    }

    guild.data.coins =
      (guild.data.coins || 0) + cash - coinsForEvery * members.length;

    const embed = {
      title: "–í—ã —Å–æ—Ç–≤–æ—Ä–∏–ª–∏ –ê–∫—Ç –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      description: `–í–∞—à–∏ <:coin:637533074879414272> ${Util.ending(
        cash,
        "–∫–æ–∏–Ω",
        "–æ–≤",
        "",
        "–∞",
      )} –±—ã–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –º–µ–∂–¥—É ${
        members.length
      } —Å–ª—É—á–∞–π–Ω—ã–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ —Å–µ—Ä–≤–µ—Ä–∞, —ç—Ç–∏ –ª—é–¥–∏ –≤–∞–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã:\n${members
        .map(
          (e, i) =>
            `${
              i % 3
                ? "<:crys3:763767653571231804>"
                : "<:crys:637290406958202880>"
            } ${Discord.escapeMarkdown(e.toString())} ‚Äî ${
              [
                { _weight: 2, x: "–°–ø–∞—Å–∏–±–æ!" },
                { _weight: 2, x: "–ë–ª–∞–≥–æ–¥–∞—Ä—é!" },
                { _weight: 2, x: "–í—ã —Å–∞–º—ã–µ –ª—É—á—à–∏–µ!" },
                { _weight: 15, x: "üíö" },
                { _weight: 15, x: "üíñ" },
                { _weight: 1, x: "ü¶ù" },
              ].random({ weights: true }).x
            }`,
        )
        .join("\n")}`,
      author: {
        iconURL: msg.author.avatarURL(),
        name: msg.author.username,
      },

      footer: note
        ? {
            iconURL: msg.author.avatarURL(),
            text: `–ü–æ—Å–ª–∞–Ω–∏–µ: ${note}`,
          }
        : {
            iconURL: client.user.avatarURL(),
            text: "–°–ø–∞—Å–∏–±–æ!",
          },

      image:
        "https://media.discordapp.net/attachments/629546680840093696/812635351801004052/penguinwalk.gif",
    };

    await msg.msg(embed);
    msg.react("üíö");
  }

  options = {
    name: "charity",
    id: 49,
    media: {
      description:
        "–í—ã —Å–ª–∏—à–∫–æ–º –¥–æ–±—Ä—ã–µ, –µ—Å–ª–∏ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π, –æ–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–¥–∞—Ç—å –∫–æ–∏–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∏—Ö –ø–æ–ª—É—á–∞—Ç –¥–∞–∂–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏. –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ —É—Å—Ç—Ä–æ–∏—Ç—å –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥—É–º–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞, –≤–µ–¥—å —ç—Ç–æ –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞",
      example: `!charity {coins | "+"} <usersCount> #"+" –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç "–í—Å–µ –∫–æ–∏–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ —É –≤–∞—Å –µ—Å—Ç—å"`,
    },
    accessibility: {
      publicized_on_level: 7,
    },
    alias: "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–ª–∞–≥–æ–¥—ñ–π–Ω—ñ—Å—Ç—å",
    allowDM: true,
    expectParams: true,
    cooldown: 7_00_00,
    type: "other",
  };
}

export default Command;
