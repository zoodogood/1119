import * as Util from "#lib/util.js";
import { client } from "#bot/client.js";
import { Actions } from "#lib/modules/ActionManager.js";

export const REASON_FOR_CHANGE_NICKNAME = "Special: in chilli game";
const FOOTER_EMOJI =
  "https://media.discordapp.net/attachments/629546680840093696/1158272956812759050/hot-pepper-2179.png?ex=651ba540&is=651a53c0&hm=9cf4a793a57fb7d37d1f3a935fc6b39ad00b015df7ec500d548d4d4920801e64&=";

class Command {
  async onChatInput(msg, interaction) {
    const memb = interaction.mention;
    let chilli =
      msg.channel.chilli &&
      msg.channel.chilli.find((chilli) => chilli.current === msg.author.id);
    setTimeout(() => msg.delete(), 30_000);

    const guildMembers = interaction.guild.members;
    const addName = (member) => {
      const newName = member.displayName + "(üå∂)";
      member.setNickname(newName, REASON_FOR_CHANGE_NICKNAME).catch(() => {});
    };
    const removeName = (member) => {
      const newName = member.displayName.replace(/\(üå∂\)/g, "").trim();
      member.setNickname(newName, REASON_FOR_CHANGE_NICKNAME).catch(() => {});
    };

    if (!chilli && !msg.author.data.chilli) {
      return msg.msg({
        title:
          "–î–ª—è –±—Ä–æ—Å–∫–∞ —É –≤–∞—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏–ª–ª–∏ üå∂Ô∏è\n–ö—É–ø–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ –≤ !–ª–∞–≤–∫–µ",
        color: "#ff0000",
        delete: 5000,
        footer: { iconURL: FOOTER_EMOJI, text: "–ë–µ–∑—É–¥–µ—Ä–∂–Ω—ã–π –ø–µ—Ä—á–∏–∫‚Ñ¢" },
      });
    }
    if (
      msg.channel.chilli &&
      msg.channel.chilli.find((channelChilli) => channelChilli.id === memb.id)
    ) {
      return msg.msg({
        title: "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –±—Ä–æ—Å–∏—Ç—å –ø–µ—Ä–µ—Ü –≤ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å –ø–µ—Ä—Ü–µ–º –≤ —Ä—É–∫–µ",
        color: "#ff0000",
        footer: { iconURL: FOOTER_EMOJI, text: "–ü–µ—Ä—á–∏–∫‚Ñ¢" },
      });
    }
    if (memb.bot) {
      return msg.msg({
        title: "ü§¨ü§¨ü§¨",
        description: "it's hot fruitctttt",
        color: "#ff0000",
        footer: {
          iconURL: FOOTER_EMOJI,
          text: "–ö–æ–µ-–∫—Ç–æ –±—Ä–æ—Å–∏–ª –ø–µ—Ä–µ—Ü –≤ –±–æ—Ç–∞..",
        },
      });
    }

    if (chilli) {
      chilli.current = memb.id;
      chilli.players[msg.author.id] = ++chilli.players[msg.author.id] || 1;
      removeName(guildMembers.resolve(interaction.mention));
      addName(guildMembers.resolve(memb));

      msg.msg({
        title: ["–ë—Ä–æ—Å–æ–∫!", "–ê –≥–æ–≤–æ—Ä—è—Ç –ø–µ—Ä—Ü—ã –Ω–µ –ª–µ—Ç–∞—é—Ç..."].random(),
        description: `–í—ã –±—Ä–æ—Å–∏–ª–∏ –ø–µ—Ä—á–∏–∫–æ–º –≤ ${memb}`,
        author: { name: msg.author.username, iconURL: msg.author.avatarURL() },
        footer: { iconURL: FOOTER_EMOJI, text: "–ë–µ–∑—É–¥–µ—Ä–∂–Ω—ã–π –ø–µ—Ä—á–∏–∫‚Ñ¢" },
        delete: 7000,
      });

      chilli.rebounds++;
      clearTimeout(chilli.kickTimeout);
      chilli.kickTimeout = setTimeout(
        () => (
          msg.channel.chilli &&
            msg.channel.chilli.includes(chilli) &&
            chilli.timeout._onTimeout(),
          clearTimeout(chilli.timeout)
        ),
        5500,
      );
      return;
    }

    const confirm = await msg.msg({
      title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞",
      description: `${msg.author.username}, –≤—ã –±—Ä–æ—Å–∏–ª–∏ –ø–µ—Ä–µ—Ü, –Ω–∞–∂–º–∏—Ç–µ "‚ùå" —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å`,
      reactions: ["‚ùå"],
    });

    await Util.sleep(2000);
    confirm.delete();

    const confirmed = !confirm.reactions.cache
      .get("‚ùå")
      .users.cache.has(msg.author.id);
    if (!confirmed) {
      msg.msg({ title: "–û—Ç–º–µ–Ω–µ–Ω–æ üå∂Ô∏è", delete: 7000 });
      return;
    }

    msg.author.data.chilli--;
    msg.channel.chilli = msg.channel.chilli || [];

    msg.msg({
      title: "–ü–µ—Ä–µ—Ü –ø–∞–¥–∞–µ—Ç! –ü–µ—Ä–µ—Ü –ø–∞–¥–∞–µ—Ç!!",
      description: `\\*–ø–µ—Ä–µ—Ü —É–ø–∞–ª –≤ —Ä—É–∫–∏ ${memb.toString()}\\*\n–ß—Ç–æ–±—ã –∫–∏–Ω—É—Ç—å –æ–±—Ä–∞—Ç–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`!chilli @memb\``,
      author: { name: msg.author.username, iconURL: msg.author.avatarURL() },
      footer: { iconURL: FOOTER_EMOJI, text: "–ë–µ–∑—É–¥–µ—Ä–∂–Ω—ã–π –ø–µ—Ä—á–∏–∫‚Ñ¢" },
    });
    addName(guildMembers.resolve(memb));
    let ms = Util.random(30, 37) * 1000;

    chilli = {
      timestamp: Date.now() + ms,
      players: {},
      current: memb.id,
      rebounds: 0,
      author: msg.author.id,
    };
    chilli.players[memb.id] = 0;
    chilli.players[msg.author.id] = 0;

    msg.channel.chilli.push(chilli);

    chilli.timeout = setTimeout(() => {
      const member = guildMembers.cache.get(chilli.current);

      Object.keys(chilli.players).forEach((id) => {
        const user = client.users.cache.get(id);
        user.action(Actions.chilliBooh, {
          boohTarget: member,
          chilli,
          msg,
          interaction,
        });
        removeName(guildMembers.resolve(user));
      });

      msg.msg({
        title: "–ë–∞—Ö! –ü–µ—Ä—á–∏–∫ –≤–∑–æ—Ä–≤–∞–ª—Å—è!",
        description: `–ü–µ—Ä–µ—Ü –±–∞—Ö–Ω—É–ª –ø—Ä—è–º–æ —É ${member}\n–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.\n–ë—ã–ª–æ —Å–æ–≤–µ—Ä—à–µ–Ω–æ –æ—Ç—Å–∫–æ–∫–æ–≤: ${chilli.rebounds}`,
        fields: Object.entries(chilli.players)
          .sortBy("1", true)
          .map(([id, score]) => ({
            name: guildMembers.cache.get(id).user.username,
            value: `–°—á—ë—Ç: ${score}`,
          }))
          .slice(0, 20),
        footer: { iconURL: FOOTER_EMOJI, text: "–ë–µ–∑—É–¥–µ—Ä–∂–Ω—ã–π –ø–µ—Ä—á–∏–∫‚Ñ¢" },
      });
      removeName(member);
      msg.channel.chilli.splice(msg.channel.chilli.indexOf(chilli), 1);

      if (!msg.channel.chilli[0]) {
        delete msg.channel.chilli;
      }
    }, ms);
  }

  options = {
    name: "chilli",
    id: 38,
    media: {
      description:
        '\n\n–ú–∏–Ω–∏-–∏–≥—Ä–∞ "–ñ–≥—É—á–∏–π –ø–µ—Ä—á–∏–∫" –ø–æ–¥—Ä–∞–∑—É–º–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ –≤—ã–º–µ—à–ª–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä—Ü–∞, –∫–æ—Ç–æ—Ä—ã–π —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –±–∞–±–∞—Ö–Ω–µ—Ç –≤ —Ä—É–∫–∞—Ö —É –æ–¥–Ω–æ–≥–æ –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Äî –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∏–≥—Ä–æ–∫ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç.\n–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∑–¥–µ—Å—å –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç—Å—è, –∞ —Å–∞–º–∞ –∏–≥—Ä–∞ –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–æ–≤.\n\n‚úèÔ∏è\n```python\n!chilli {memb}\n```\n\n',
    },
    allias: "–ø–µ—Ä—á–∏–∫ –ø–µ—Ä–µ—Ü –ø–µ—Ä–µ—Ü—å",
    expectMention: true,
    allowDM: true,
    hidden: true,
    cooldown: 3_500,
    cooldownTry: 2,
    type: "other",
  };
}

export default Command;
