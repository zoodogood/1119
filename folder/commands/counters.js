

import * as Util from '#lib/util.js';
import Discord from 'discord.js';
import CounterManager from '#lib/modules/CounterManager.js';

class Command {

  fetchCountersInGuild(guild){
    return CounterManager.data
      .filter(counter => counter.guildId === guild.id);
  }

  createEmbed({interaction, counters}){
    const toValue = (counter) => ({
      message: `üñäÔ∏è [–°–æ–æ–±—â–µ–Ω–∏–µ.](https://discord.com/channels/${ counter.guildId }/${ counter.channelId }/${ counter.messageId })`,
      channel: `ü™ß \`#${ interaction.guild.channels.cache.get(counter.channelId).name }\``,
      poster: `üñåÔ∏è <#${ counter.channelId }>`
    })[counter.type];

    const toField = (counter, i) => ({name: `**${i + 1}.**`, value: toValue(counter), inline: true}); 

    const fields = 
      counters.map(toField);

    !fields.length && fields.push({name: "–ù–æ –∑–¥–µ—Å—å –ø—É—Å—Ç–æ.", value: "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å—á—ë—Ç—á–∏–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `!counter`"});

    return {
      title: "–°—á—ë—Ç—á–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞",
      fields
    };
  }

	async onChatInput(msg, interaction){
    

    const counters = this.fetchCountersInGuild(interaction.guild);
    const embed = this.createEmbed({interaction, counters});
    

    const message = await msg.msg(embed);

    const reactions = () => (counters.length && !interaction.user.wastedPermissions(16)[0]) ? ["‚úèÔ∏è", "üóëÔ∏è"] : ["‚ùå"];
    let react, question, answer, counter;
    while (true){
      react = await message.awaitReact({user: msg.author, removeType: "all"}, ...reactions());
      switch (react) {
        case "üóëÔ∏è":
          question = await msg.msg({title: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—á—ë—Ç—á–∏–∫–∞, –¥–ª—è –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è"});
          answer = await Util.awaitReactOrMessage(question, msg.author, "‚ùå");
          question.delete();
          if (!answer || !answer.content || isNaN(answer.content) || answer.content > counters.length) break;
          counter = counters.splice(answer.content - 1, 1)[0];
          CounterManager.delete(counter._original);
          counters.forEach((e, i) => e.name = `**${i + 1}.**`);
          message.msg({title: "–°—á—ë—Ç—á–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞", edit: true, fields: counters[0] ? counters : {name: "–¢—É—Ç –ø—É—Å—Ç–æ.", value: "–í—ã —É–¥–∞–ª–∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å—á—ë—Ç—á–∏–∫"}, description: `–°—á—ë—Ç—á–∏–∫ #${answer.content} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.`});
        break;
        case "‚úèÔ∏è":
          question = await msg.msg({title: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—á—ë—Ç—á–∏–∫–∞, –¥–ª—è –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"});
          answer = await Util.awaitReactOrMessage(question, msg.author, "‚ùå");

          if (!answer || !answer.content || isNaN(answer.content) || answer.content - 1 > counters.length){
            question.delete();
            msg.msg({title: "–≠–ª–µ–º–µ–Ω—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", color: "#ff0000"});
            break;
          };

          counter = counters[answer.content - 1];
          question.msg({title: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ", edit: true, description: `**–°—Ç–∞—Ä–æ–µ:**\n\`\`\`${Discord.escapeCodeBlock( counter._original.template )}\`\`\``});
          answer = await msg.channel.awaitMessage(msg.author);
          question.delete();
          counter._original.template = answer.content;
          CounterManager.file.write();
          CounterManager.up(counter._original);

          counter.value = counter.type == "channel" ? `ü™ß \`#${msg.guild.channels.cache.get(e.channel).name}\`` : counter.value ;
          message.msg({title: "–°—á—ë—Ç—á–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞", edit: true, fields: counters, description: `–°–æ–æ–±—â–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ!`});
        break;
        default: return message.delete();
      }
    }
  }


	options = {
	  "name": "counters",
	  "id": 43,
	  "media": {
	    "description": "\n\n–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—á—ë—Ç—á–∏–∫–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –°–º. –∫–æ–º–∞–Ω–¥—É `!counter`\n\n:pencil2:\n```python\n!counters #–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤\n```\n\n"
	  },
	  "allias": "—Å—á—ë—Ç—á–∏–∫–∏ —Å—á–µ—Ç—á–∏–∫–∏",
		"allowDM": false,
		"cooldown": 10_000_000,
		"type": "guild"
	};
};

export default Command;