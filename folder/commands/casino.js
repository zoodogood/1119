import { BaseCommand } from "#lib/BaseCommand.js";
import { Actions } from "#lib/modules/ActionManager.js";
import CooldownManager from "#lib/modules/CooldownManager.js";
import { PropertiesEnum } from "#lib/modules/Properties.js";
import * as Util from "#lib/util.js";

class Command extends BaseCommand {
  parseParams(interaction) {
    let bet = interaction.params.match(/\d+|\+/);

    if (bet === null) {
      interaction.channel.msg({
        title: "–£–∫–∞–∂–∏—Ç–µ –°—Ç–∞–≤–∫—É –≤ —á–∏—Å–ª–æ–≤–æ–º –≤–∏–¥–µ!",
        color: "#ff0000",
        delete: 3000,
      });
      return null;
    }
    bet = bet[0];

    if (bet === "+") {
      bet = interaction.userData.coins;
    }

    bet = Math.max(0, Math.floor(bet));

    return { bet };
  }
  setCooldown(user) {
    const COOLDOWN = 300_000;
    const { id } = this.options;
    const key = `CD_${id}`;
    CooldownManager.api(user.data, key, { perCall: COOLDOWN }).call();
  }

  async onChatInput(msg, interaction) {
    const { bet } = this.parseParams(interaction) ?? {};
    if (!bet) {
      return;
    }

    const { userData, user } = interaction;
    if (userData.coins < bet) {
      msg.msg({ title: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤", color: "#ff0000", delete: 3000 });
      return;
    }

    const diceRoll = Util.random(8);
    const embed = {
      title: "–õ–µ—Å–æ–≤–∏—Ç–æ–µ –∫–∞–∑–∏–Ω–æ",
      author: { name: msg.author.username, iconURL: msg.author.avatarURL() },
      delete: 20_000,
      footer: { text: `–°—Ç–∞–≤–∫–∞: ${bet}` },
    };
    const isWon = diceRoll % 2;

    user.action(Actions.casinoSession, {
      isWon,
      bet,
    });

    embed.description = `
**${isWon ? "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏." : "–ü—Ä–æ–∏–≥—Ä–∞–ª–∏"}**
**–ö–∏–¥–∞–µ–º –∫—É–±–∏–∫.. –≤—ã–ø–∞–¥–∞–µ—Ç:** \`${diceRoll}\`; ${isWon ? "ü¶ù" : "‚ùå"}

${
  isWon
    ? `\\*–í–∞–º –¥–æ—Å—Ç–∞–µ—Ç—Å—è –∫—É—à ‚Äî ${Util.ending(
        bet * 2,
        "–∫–æ–∏–Ω",
        "–æ–≤",
        "",
        "–∞",
      )} <:coin:637533074879414272>\\*`
    : "–ß—Ç–æ–±—ã –≤—ã–∏–≥—Ä–∞—Ç—å, –¥–æ–ª–∂–Ω–æ –≤—ã–ø–∞—Å—Ç—å —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 2"
}
`;

    Util.addResource({
      user,
      value: (-1) ** !isWon * bet,
      executor: user,
      source: "command.casino",
      resource: PropertiesEnum.coins,
      context: { interaction, isWon },
    });
    this.setCooldown(user);
    msg.msg(embed);
  }

  options = {
    name: "casino",
    id: 57,
    media: {
      description:
        '\n\n–ú–µ–Ω—è –¥–æ–ª–≥–æ –ø—Ä–æ—Å–∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –ö–∞–∑–∏–Ω–æ. –ò –≤–æ—Ç –æ–Ω–æ –∑–¥–µ—Å—å!\n–¢–∞–∫–æ–µ –∂–µ –ø—É—Å—Ç–æ–µ –∫–∞–∫ –∏ –≤–∞—à–∏ –∫–æ—à–µ–ª—å–∫–∏\n\n‚úèÔ∏è\n```python\n!casino {coinsBet | "+"}\n```\n\n',
    },
    alias: "–∫–∞–∑–∏–Ω–æ bet —Å—Ç–∞–≤–∫–∞",
    expectParams: true,
    allowDM: true,
    cooldown: true,
    type: "other",
  };
}

export default Command;
