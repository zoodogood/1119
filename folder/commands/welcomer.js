import client from "#bot/client.js";
import * as Util from "#lib/util.js";

class Command {
  async onChatInput(msg, interaction) {
    const guild = msg.guild;
    let answer;

    if (guild.data.hi) {
      const early = await msg.msg({
        title: "–†–∞–Ω–µ–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:",
        color: guild.data.hi.color,
        image: guild.data.hi.image,
        description: guild.data.hi.message,
        scope: { tag: msg.author.toString(), name: msg.author.username },
        footer: { text: "–ù–∞–∂–º–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" },
      });
      const react = await early.awaitReact(
        { user: msg.author, removeType: "all", time: 20000 },
        "‚úèÔ∏è",
      );
      early.delete();
      if (!react) return;
    }

    const whatMessage = await msg.msg({
      title:
        "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ—Ç–æ—Ä—ã–º –±–æ—Ç –±—É–¥–µ—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!",
      description:
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ {module("context").name}, –æ–Ω–∏ –∑–Ω–∞—Ç–Ω–æ –≤–∞–º –ø–æ–º–æ–≥—É—Ç!',
    });
    answer = await msg.channel.awaitMessage({ user: msg.author });
    if (!answer) {
      return;
    }

    const message = answer.content;
    whatMessage.delete();

    const whatColor = await msg.msg({
      title: "–£–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ HEX `#38f913`",
      description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–∫—Ü–∏—é ‚ùå, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç",
    });

    answer = await Util.awaitReactOrMessage({
      target: whatColor,
      user: interaction.user,
      reactionOptions: { reactions: ["‚ùå"] },
    });
    if (!answer) {
      return;
    }

    const color = answer.content ? answer.content.replace("#", "") : null;
    whatColor.delete();

    const whatImage = await msg.msg({
      title: "–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
      description: "–ò–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç",
    });
    answer = await Util.awaitReactOrMessage({
      target: whatImage,
      user: interaction.user,
      reactionOptions: { reactions: ["‚ùå"] },
    });
    if (!answer) {
      return;
    }

    const image = answer.content || null;
    whatImage.delete();
    if (image && !image.startsWith("http"))
      return msg.msg({
        title: "–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
        color: "#ff0000",
        delete: 3000,
      });

    let rolesId;
    const whatRoles = await msg.msg({
      title:
        "–í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∞–π–¥–∏ —Ä–æ–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –æ–Ω–∏ –±—É–¥—É—Ç –≤—ã–¥–∞–≤–∞—Ç—å—Å—è –≤—Å–µ–º –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º",
      description: "–≠—Ç–æ—Ç –ø—É–Ω–∫—Ç —Ç–æ–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
    });
    answer = await Util.awaitReactOrMessage({
      target: whatRoles,
      user: interaction.user,
      reactionOptions: { reactions: ["‚ùå"] },
    });
    if (!answer) return;
    whatRoles.delete();
    if (answer.content) {
      rolesId = answer.content.split(" ");
      const roles = rolesId
        .map((el) => msg.guild.roles.cache.get(el))
        .filter((el) => el);
      if (rolesId.length !== roles.length)
        return msg.msg({
          title: `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª–∏ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∏–¥–µ–Ω—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º: ${rolesId
            .filter((roleId) => !roles.map((role) => role.id).includes(roleId))
            .join(" ")}`,
          delete: 5000,
          color: "#ff0000",
        });
    } else rolesId = false;

    const whatChannel = await msg.msg({
      title: "–£–ø–æ–º—è–Ω–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–π –∏–ª–∏...",
      color: "#ffff00",
      description: `üì• - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ ${
        guild.channels.cache.get(guild.data.hiChannel)
          ? "\n–°–µ–π—á–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:\n" +
            guild.channels.cache.get(guild.data.hiChannel).toString() +
            " - –û—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å üî∞"
          : ""
      }`,
    });
    answer = await Util.awaitReactOrMessage({
      target: whatChannel,
      user: interaction.user,
      reactionOptions: {
        reactions: ["üì•", guild.data.hiChannel ? "üî∞" : null],
      },
    });
    whatChannel.delete();
    if (!answer) {
      return;
    }

    const channelId =
      answer.emoji?.toString() === "üî∞"
        ? guild.data.hiChannel
        : answer.emoji?.toString() === "üì•"
          ? interaction.channel.id
          : answer.content?.match(/\d{16,21}/)?.[0];

    const channel = client.channels.cache.get(channelId);
    if (!channel) {
      interaction.channel.msg({
        title: `–ö–∞–Ω–∞–ª, #id:${channelId ?? "null"}, –Ω–µ –Ω–∞–π–¥–µ–Ω`,
      });
      return;
    }

    guild.data.hiChannel = channelId;

    guild.data.hi = { message, color, image, rolesId };
    msg.msg({
      title: "–ì–æ—Ç–æ–≤–æ! –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä: –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫",
      color: color,
      image: image,
      description: message,
      scope: { tag: msg.author.toString(), name: msg.author.username },
      delete: 15000,
    });
  }

  options = {
    name: "welcomer",
    id: 13,
    media: {
      description:
        "\n\n–ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–º–µ–Ω–Ω–æ —Ç–∞–∫, –∫–∞–∫ –≤—ã –µ–º—É —Å–∫–∞–∂–µ—Ç–µ, –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –Ω–æ–≤–∏—á–∫–∞–º —Ä–æ–ª–∏, –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ –∫–∞–Ω–∞–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–º–∞—Ö–∞—Ç—å —Ä—É–∫–æ–π.\n\n‚úèÔ∏è\n```python\n!welcomer (–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤)\n```\n\n",
    },
    alias: "—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ sethello –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è",
    allowDM: true,
    type: "guild",
    Permissions: 32n,
  };
}

export default Command;
