import { TimeEventsManager, BossManager } from "#lib/modules/mod.js";
import { client } from "#bot/client.js";

import TreeCommand from "#folder/commands/seed.js";
import BankCommand from "#folder/commands/bank.js";
import { ending, NumberFormatLetterize } from "#src/lib/util.js";

class Event {
  run(eventData) {
    const next =
      new Date(Date.now() + 14500000).setHours(20, 0, 0) - Date.now();
    if (eventData.isLost) {
      return TimeEventsManager.create("day-stats", next);
    }

    const context = {
      treeCommand: new TreeCommand(),
      bankCommand: new BankCommand(),
      guildsStatsContext: {},
    };

    client.guilds.cache
      .filter((guild) => guild.data.treeLevel)
      .each((guild) => context.treeCommand.onDayStats(guild, context));

    client.guilds.cache.forEach((guild) => {
      this.sendStats(guild, context);
    });

    client.guilds.cache
      .filter((guild) => guild.data.professions)
      .each((guild) => {
        context.bankCommand.onDayStats(guild, context);
      });

    client.guilds.cache.each((guild) => BossManager.beforeApparance(guild));

    return TimeEventsManager.create("day-stats", next);
  }

  sendStats(guild, context) {
    const guildData = guild.data;
    const messagesOfDay = guildData.day_msg || 0;
    const { guildsStatsContext } = context;

    
    const { treeMessagesNeed } = guildsStatsContext[guild.id] || {};

    guild.data.coins += 2 * guild.memberCount;

    guildData.days = guildData.days + 1 || 1;
    guildData.msg_total = guildData.msg_total + messagesOfDay || messagesOfDay;

    let description = `–ó–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${ending(
      messagesOfDay,
      "—Å–æ–æ–±—â–µ–Ω–∏",
      "–π",
      "–µ",
      "—è",
    )}\n–†–µ–∫–æ—Ä–¥–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${guildData.day_max || (guildData.day_max = 0)}`;

    if (guildData.days > 3) {
      description += `\n–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${NumberFormatLetterize(
        guildData.msg_total,
      )}\n–í —Å—Ä–µ–¥–Ω–µ–º –∑–∞ –¥–µ–Ω—å: ${Math.round(guildData.msg_total / guildData.days)}`;
    }

    if (guildData.day_max < messagesOfDay) {
      guildData.day_max = messagesOfDay;
      description += `\n–ì–∏–ª—å–¥–∏—è ${[
        "<a:jeqery:768047102503944202>",
        "<a:jeqeryBlue:806176327223738409>",
        "<a:jeqeryPurple:806176181140848660>",
        "<a:jeqeryGreen:806176083757105162>",
        "<a:jeqeryRed:806175947447205958>",
        "<a:blockPink:794615199361400874>",
        "<a:blockAqua:794166748085223475>",
      ].random()} —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∞ —Å–≤–æ–π —Ä–µ–∫–æ—Ä–¥ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º!`;
    }

    guildData.day_msg = 0;

    if (!messagesOfDay) {
      return;
      // description = ["–°–µ–≥–æ–¥–Ω—è –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ –Ω–∏ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ", "–°–µ–≥–æ–¥–Ω—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—É—Å—Ç–æ", "–ó–∞ —Ü–µ–ª—ã–π –¥–µ–Ω—å –Ω–∏ –æ–¥–∏–Ω —Å–º–µ—Ä—Ç–Ω—ã–π –Ω–µ –ø—Ä–æ—è–≤–∏–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "–ü–æ—Ö–æ–∂–µ, —Ç–∏—à–∏–Ω–∞ ‚Äî –≤—Ç–æ—Ä–æ–µ –∏–º—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"].random();
    }

    if (treeMessagesNeed)
      description += `\n\n–î–µ—Ä–µ–≤–æ –∑–∞—Å—ã—Ö–∞–µ—Ç! –ï–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞ ${ending(
        treeMessagesNeed - messagesOfDay,
        "—Å–æ–æ–±—â–µ–Ω–∏",
        "–π",
        "–µ",
        "—è",
      )} –±–æ–ª—å—à–µ üíß`;

    guild.chatSend({ title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", description });
  }

  options = {
    name: "TimeEvent/day-stats",
  };
}

export default Event;
