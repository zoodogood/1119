import { question } from "#bot/util.js";

export default {
  emoji: "üñäÔ∏è",
  label: "üñäÔ∏è–°–æ–æ–±—â–µ–Ω–∏–µ",
  description:
    "–ï–¥–∏–Ω–æ–∂–¥—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ—Å–ª–µ, –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ, –∏–∑–º–µ–Ω—è–µ—Ç –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ",
  key: "message_content",
  setup: async (context) => {
    const { interaction, counter, typeBase } = context.interaction;
    const { channel, user, guild } = interaction;
    counter.type = typeBase.key;
    counter.channelId = channel.id;
    counter.guildId = guild.id;
    counter.authorId = user.id;

    question({
      channel,
      user,
      message: {
        description:
          "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Å—á—ë—Ç—á–∏–∫–æ–≤-—Å–æ–æ–±—â–µ–Ω–∏–π. \n–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –ü—Ä–∏–∑—Ä–∞–∫–æ–º. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –Ω–µ–≥–æ, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è",
      },
    });

    const questionNeedEmbed = async () => {
      const message = await interaction.message.msg({
        title: "–í–∞—à–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –Ω—É–∂–µ–Ω —ç–º–±–µ–¥?",
        description: "–í—ã —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å JSON-–Ω–∞–±–æ—Ä –¥–ª—è —ç–º–±–µ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è",
      });
      const react = await message.awaitReact(
        { user: interaction.user, removeType: "all" },
        "685057435161198594",
        "763807890573885456",
      );
      message.delete();
      return react === "685057435161198594";
    };

    context.needEmbed = await questionNeedEmbed();

    if (context.needEmbed) {
    }

    return counter;
  },
  async render({ channel, counter }, templater) {
    const options = counter.message;
    options.title &&= await templater.replaceAll(options.title);
    options.description &&= await templater.replaceAll(options.description);
    options.content &&= await templater.replaceAll(options.content);

    const message = await channel.messages.fetch(counter.messageId);
    message.msg({ ...options, edit: true });
    return message;
  },
};
